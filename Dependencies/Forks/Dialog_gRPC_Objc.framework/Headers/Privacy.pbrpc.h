// Code generated by gRPC proto compiler.  DO NOT EDIT!
// source: privacy.proto

#if !defined(GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO) || !GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO
#import "Privacy.pbobjc.h"
#endif

#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
#import <ProtoRPC/ProtoService.h>
#import <ProtoRPC/ProtoRPCLegacy.h>
#import <RxLibrary/GRXWriteable.h>
#import <RxLibrary/GRXWriter.h>
#endif

@class RequestBlockUser;
@class RequestLoadBlockedUsers;
@class RequestUnblockUser;
@class ResponseLoadBlockedUsers;
@class ResponseSeq;

#if !defined(GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO) || !GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO
  #import "Annotations.pbobjc.h"
  #import "Definitions.pbobjc.h"
  #import "Miscellaneous.pbobjc.h"
  #import "Peers.pbobjc.h"
  #import "Scalapb.pbobjc.h"
#endif

@class GRPCUnaryProtoCall;
@class GRPCStreamingProtoCall;
@class GRPCCallOptions;
@protocol GRPCProtoResponseHandler;
@class GRPCProtoCall;


NS_ASSUME_NONNULL_BEGIN

@protocol Privacy2 <NSObject>

#pragma mark BlockUser(RequestBlockUser) returns (ResponseSeq)

- (GRPCUnaryProtoCall *)blockUserWithMessage:(RequestBlockUser *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark UnblockUser(RequestUnblockUser) returns (ResponseSeq)

- (GRPCUnaryProtoCall *)unblockUserWithMessage:(RequestUnblockUser *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark LoadBlockedUsers(RequestLoadBlockedUsers) returns (ResponseLoadBlockedUsers)

- (GRPCUnaryProtoCall *)loadBlockedUsersWithMessage:(RequestLoadBlockedUsers *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

@end

/**
 * The methods in this protocol belong to a set of old APIs that have been deprecated. They do not
 * recognize call options provided in the initializer. Using the v2 protocol is recommended.
 */
@protocol Privacy <NSObject>

#pragma mark BlockUser(RequestBlockUser) returns (ResponseSeq)

- (void)blockUserWithRequest:(RequestBlockUser *)request handler:(void(^)(ResponseSeq *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToBlockUserWithRequest:(RequestBlockUser *)request handler:(void(^)(ResponseSeq *_Nullable response, NSError *_Nullable error))handler;


#pragma mark UnblockUser(RequestUnblockUser) returns (ResponseSeq)

- (void)unblockUserWithRequest:(RequestUnblockUser *)request handler:(void(^)(ResponseSeq *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToUnblockUserWithRequest:(RequestUnblockUser *)request handler:(void(^)(ResponseSeq *_Nullable response, NSError *_Nullable error))handler;


#pragma mark LoadBlockedUsers(RequestLoadBlockedUsers) returns (ResponseLoadBlockedUsers)

- (void)loadBlockedUsersWithRequest:(RequestLoadBlockedUsers *)request handler:(void(^)(ResponseLoadBlockedUsers *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToLoadBlockedUsersWithRequest:(RequestLoadBlockedUsers *)request handler:(void(^)(ResponseLoadBlockedUsers *_Nullable response, NSError *_Nullable error))handler;


@end


#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
/**
 * Basic service implementation, over gRPC, that only does
 * marshalling and parsing.
 */
@interface Privacy : GRPCProtoService<Privacy2, Privacy>
- (instancetype)initWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions NS_DESIGNATED_INITIALIZER;
+ (instancetype)serviceWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions;
// The following methods belong to a set of old APIs that have been deprecated.
- (instancetype)initWithHost:(NSString *)host;
+ (instancetype)serviceWithHost:(NSString *)host;
@end
#endif

NS_ASSUME_NONNULL_END

