// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: web_rtc.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AdvertiseMaster;
@class AdvertisePeer;
@class AdvertiseSelf;
@class Answer;
@class CallLogEntry;
@class CallMember;
@class CallMemberStateHolder;
@class CallNameChanged;
@class CallStats;
@class Candidate;
@class ClientInfo;
@class CloseSession;
@class DTMF;
@class EnableConnection;
@class GPBBoolValue;
@class GPBBytesValue;
@class GPBInt32Value;
@class GPBInt64Value;
@class GPBStringValue;
@class GotICECandidate;
@class GroupOutPeer;
@class ICECandidate;
@class ICEServer;
@class NeedDisconnect;
@class NeedOffer;
@class NegotinationSuccessful;
@class Offer;
@class OnRenegotiationNeeded;
@class OutPeer;
@class Peer;
@class PeerSettings;
@class RemovedICECandidates;
@class UserOutPeer;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum CallDisposedReason

typedef GPB_ENUM(CallDisposedReason) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CallDisposedReason_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CallDisposedReason_CalldisposedreasonUnknown = 0,
  CallDisposedReason_CalldisposedreasonRejected = 1,
  CallDisposedReason_CalldisposedreasonBusy = 2,
  CallDisposedReason_CalldisposedreasonEnded = 3,
  CallDisposedReason_CalldisposedreasonAnswerTimeout = 4,
};

GPBEnumDescriptor *CallDisposedReason_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CallDisposedReason_IsValidValue(int32_t value);

#pragma mark - Enum RejectCallReason

typedef GPB_ENUM(RejectCallReason) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RejectCallReason_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RejectCallReason_RejectcallreasonUnknown = 0,
  RejectCallReason_RejectcallreasonDecline = 1,
  RejectCallReason_RejectcallreasonBusy = 2,
};

GPBEnumDescriptor *RejectCallReason_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RejectCallReason_IsValidValue(int32_t value);

#pragma mark - Enum DTMFCode

typedef GPB_ENUM(DTMFCode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DTMFCode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  DTMFCode_DtmfcodeUnknown = 0,
  DTMFCode_DtmfcodeZero = 1,
  DTMFCode_DtmfcodeOne = 2,
  DTMFCode_DtmfcodeTwo = 3,
  DTMFCode_DtmfcodeThree = 4,
  DTMFCode_DtmfcodeFour = 5,
  DTMFCode_DtmfcodeFive = 6,
  DTMFCode_DtmfcodeSix = 7,
  DTMFCode_DtmfcodeSeven = 8,
  DTMFCode_DtmfcodeEight = 9,
  DTMFCode_DtmfcodeNine = 10,
  DTMFCode_DtmfcodeAsterisk = 11,
  DTMFCode_DtmfcodePound = 12,
  DTMFCode_DtmfcodeA = 13,
  DTMFCode_DtmfcodeB = 14,
  DTMFCode_DtmfcodeC = 15,
  DTMFCode_DtmfcodeD = 16,
};

GPBEnumDescriptor *DTMFCode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DTMFCode_IsValidValue(int32_t value);

#pragma mark - Enum CallStatsType

typedef GPB_ENUM(CallStatsType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CallStatsType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CallStatsType_CallstatstypeUnknown = 0,
  CallStatsType_CallstatstypeTurnServerRoundTripTime = 1,
  CallStatsType_CallstatstypeIceConnectionFailed = 2,
  CallStatsType_CallstatstypeIceConnectionConnected = 3,
  CallStatsType_CallstatstypeIceConnectionDidNotConnect = 4,
  CallStatsType_CallstatstypeIceConnectionConnectedTime = 5,
  CallStatsType_CallstatstypePeerConnectionCreateAnswerFailed = 6,
  CallStatsType_CallstatstypePeerConnectionCreateOfferFailed = 7,
  CallStatsType_CallstatstypePeerConnectionSetRemoteDescriptionFailed = 8,
  CallStatsType_CallstatstypePeerConnectionSetLocalDescriptionFailed = 9,
};

GPBEnumDescriptor *CallStatsType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CallStatsType_IsValidValue(int32_t value);

#pragma mark - Enum CallMemberState

typedef GPB_ENUM(CallMemberState) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CallMemberState_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CallMemberState_CallmemberstateUnknown = 0,
  CallMemberState_CallmemberstateRinging = 1,
  CallMemberState_CallmemberstateRingingReached = 4,
  CallMemberState_CallmemberstateConnecting = 2,
  CallMemberState_CallmemberstateConnected = 3,
  CallMemberState_CallmemberstateEnded = 5,
};

GPBEnumDescriptor *CallMemberState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CallMemberState_IsValidValue(int32_t value);

#pragma mark - WebRtcRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface WebRtcRoot : GPBRootObject
@end

#pragma mark - UpdateIncomingCallDeprecated

typedef GPB_ENUM(UpdateIncomingCallDeprecated_FieldNumber) {
  UpdateIncomingCallDeprecated_FieldNumber_CallId = 1,
  UpdateIncomingCallDeprecated_FieldNumber_AttemptIndex = 2,
};

/**
 * Update about incoming call (Sent every 10 seconds)
 **/
GPB_FINAL @interface UpdateIncomingCallDeprecated : GPBMessage

@property(nonatomic, readwrite) int64_t callId;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Value *attemptIndex;
/** Test to see if @c attemptIndex has been set. */
@property(nonatomic, readwrite) BOOL hasAttemptIndex;

@end

#pragma mark - UpdateIncomingCall

typedef GPB_ENUM(UpdateIncomingCall_FieldNumber) {
  UpdateIncomingCall_FieldNumber_CallId = 1,
  UpdateIncomingCall_FieldNumber_EventBusId = 2,
  UpdateIncomingCall_FieldNumber_Peer = 3,
  UpdateIncomingCall_FieldNumber_DisplayName = 4,
  UpdateIncomingCall_FieldNumber_AttemptIndex = 5,
  UpdateIncomingCall_FieldNumber_OutPeer = 6,
  UpdateIncomingCall_FieldNumber_Video = 7,
};

/**
 * A new update about incoming call
 **/
GPB_FINAL @interface UpdateIncomingCall : GPBMessage

@property(nonatomic, readwrite) int64_t callId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *eventBusId;

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** / Call visual name */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *displayName;
/** Test to see if @c displayName has been set. */
@property(nonatomic, readwrite) BOOL hasDisplayName;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Value *attemptIndex;
/** Test to see if @c attemptIndex has been set. */
@property(nonatomic, readwrite) BOOL hasAttemptIndex;

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *outPeer;
/** Test to see if @c outPeer has been set. */
@property(nonatomic, readwrite) BOOL hasOutPeer;

@property(nonatomic, readwrite) BOOL video;

@end

#pragma mark - UpdateCallHandled

typedef GPB_ENUM(UpdateCallHandled_FieldNumber) {
  UpdateCallHandled_FieldNumber_CallId = 1,
  UpdateCallHandled_FieldNumber_AttemptIndex = 2,
};

/**
 * Update about incoming call handled
 **/
GPB_FINAL @interface UpdateCallHandled : GPBMessage

@property(nonatomic, readwrite) int64_t callId;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Value *attemptIndex;
/** Test to see if @c attemptIndex has been set. */
@property(nonatomic, readwrite) BOOL hasAttemptIndex;

@end

#pragma mark - UpdateCallDisposed

typedef GPB_ENUM(UpdateCallDisposed_FieldNumber) {
  UpdateCallDisposed_FieldNumber_CallId = 1,
  UpdateCallDisposed_FieldNumber_AttemptIndex = 2,
  UpdateCallDisposed_FieldNumber_Reason = 3,
};

/**
 * Update about the call ending (all participants have left)
 **/
GPB_FINAL @interface UpdateCallDisposed : GPBMessage

@property(nonatomic, readwrite) int64_t callId;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Value *attemptIndex;
/** Test to see if @c attemptIndex has been set. */
@property(nonatomic, readwrite) BOOL hasAttemptIndex;

@property(nonatomic, readwrite) CallDisposedReason reason;

@end

/**
 * Fetches the raw value of a @c UpdateCallDisposed's @c reason property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UpdateCallDisposed_Reason_RawValue(UpdateCallDisposed *message);
/**
 * Sets the raw value of an @c UpdateCallDisposed's @c reason property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUpdateCallDisposed_Reason_RawValue(UpdateCallDisposed *message, int32_t value);

#pragma mark - RequestGetCallInfo

typedef GPB_ENUM(RequestGetCallInfo_FieldNumber) {
  RequestGetCallInfo_FieldNumber_CallId = 1,
};

/**
 * Getting Call Information
 **/
GPB_FINAL @interface RequestGetCallInfo : GPBMessage

@property(nonatomic, readwrite) int64_t callId;

@end

#pragma mark - ResponseGetCallInfo

typedef GPB_ENUM(ResponseGetCallInfo_FieldNumber) {
  ResponseGetCallInfo_FieldNumber_Peer = 1,
  ResponseGetCallInfo_FieldNumber_GroupsArray = 2,
  ResponseGetCallInfo_FieldNumber_UsersArray = 3,
  ResponseGetCallInfo_FieldNumber_EventBusId = 4,
  ResponseGetCallInfo_FieldNumber_DisplayName = 5,
};

GPB_FINAL @interface ResponseGetCallInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GroupOutPeer*> *groupsArray;
/** The number of items in @c groupsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger groupsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserOutPeer*> *usersArray;
/** The number of items in @c usersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger usersArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *eventBusId;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *displayName;
/** Test to see if @c displayName has been set. */
@property(nonatomic, readwrite) BOOL hasDisplayName;

@end

#pragma mark - CallLogEntry

typedef GPB_ENUM(CallLogEntry_FieldNumber) {
  CallLogEntry_FieldNumber_Id_p = 1,
  CallLogEntry_FieldNumber_CallDate = 2,
  CallLogEntry_FieldNumber_Initiator = 3,
  CallLogEntry_FieldNumber_Recipient = 4,
  CallLogEntry_FieldNumber_Duration = 5,
  CallLogEntry_FieldNumber_Answered = 6,
  CallLogEntry_FieldNumber_Finished = 7,
  CallLogEntry_FieldNumber_DisplayName = 8,
  CallLogEntry_FieldNumber_Rejected = 9,
};

/**
 * This struct represents a call from the history
 **/
GPB_FINAL @interface CallLogEntry : GPBMessage

/** / call id */
@property(nonatomic, readwrite) int64_t id_p;

@property(nonatomic, readwrite) int64_t callDate;

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *initiator;
/** Test to see if @c initiator has been set. */
@property(nonatomic, readwrite) BOOL hasInitiator;

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *recipient;
/** Test to see if @c recipient has been set. */
@property(nonatomic, readwrite) BOOL hasRecipient;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *duration;
/** Test to see if @c duration has been set. */
@property(nonatomic, readwrite) BOOL hasDuration;

/** / was the call answered by anybody */
@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *answered;
/** Test to see if @c answered has been set. */
@property(nonatomic, readwrite) BOOL hasAnswered;

@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *finished;
/** Test to see if @c finished has been set. */
@property(nonatomic, readwrite) BOOL hasFinished;

/** / optional display name for this call */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *displayName;
/** Test to see if @c displayName has been set. */
@property(nonatomic, readwrite) BOOL hasDisplayName;

@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *rejected;
/** Test to see if @c rejected has been set. */
@property(nonatomic, readwrite) BOOL hasRejected;

@end

#pragma mark - RequestLoadCalls

typedef GPB_ENUM(RequestLoadCalls_FieldNumber) {
  RequestLoadCalls_FieldNumber_NextOffset = 1,
  RequestLoadCalls_FieldNumber_Limit = 2,
};

/**
 * Call this function to load call history
 **/
GPB_FINAL @interface RequestLoadCalls : GPBMessage

/** / Cursor */
@property(nonatomic, readwrite, strong, null_resettable) GPBBytesValue *nextOffset;
/** Test to see if @c nextOffset has been set. */
@property(nonatomic, readwrite) BOOL hasNextOffset;

@property(nonatomic, readwrite) int32_t limit;

@end

#pragma mark - ResponseLoadCalls

typedef GPB_ENUM(ResponseLoadCalls_FieldNumber) {
  ResponseLoadCalls_FieldNumber_CallsArray = 1,
  ResponseLoadCalls_FieldNumber_UsersArray = 2,
  ResponseLoadCalls_FieldNumber_GroupsArray = 3,
  ResponseLoadCalls_FieldNumber_NextOffset = 4,
};

/**
 * / Calls + related peers
 **/
GPB_FINAL @interface ResponseLoadCalls : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CallLogEntry*> *callsArray;
/** The number of items in @c callsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger callsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserOutPeer*> *usersArray;
/** The number of items in @c usersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger usersArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GroupOutPeer*> *groupsArray;
/** The number of items in @c groupsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger groupsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBBytesValue *nextOffset;
/** Test to see if @c nextOffset has been set. */
@property(nonatomic, readwrite) BOOL hasNextOffset;

@end

#pragma mark - RequestDoCall

typedef GPB_ENUM(RequestDoCall_FieldNumber) {
  RequestDoCall_FieldNumber_Peer = 1,
  RequestDoCall_FieldNumber_Timeout = 2,
};

/**
 * Do Call. Right after a call client need to start sending CallInProgress
 **/
GPB_FINAL @interface RequestDoCall : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite) int64_t timeout;

@end

#pragma mark - ResponseDoCall

typedef GPB_ENUM(ResponseDoCall_FieldNumber) {
  ResponseDoCall_FieldNumber_CallId = 1,
  ResponseDoCall_FieldNumber_EventBusId = 2,
  ResponseDoCall_FieldNumber_DeviceId = 3,
};

GPB_FINAL @interface ResponseDoCall : GPBMessage

@property(nonatomic, readwrite) int64_t callId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *eventBusId;

@property(nonatomic, readwrite) int64_t deviceId;

@end

#pragma mark - RequestJoinCall

typedef GPB_ENUM(RequestJoinCall_FieldNumber) {
  RequestJoinCall_FieldNumber_CallId = 1,
};

/**
 * Joining Call
 **/
GPB_FINAL @interface RequestJoinCall : GPBMessage

@property(nonatomic, readwrite) int64_t callId;

@end

#pragma mark - RequestRejectCall

typedef GPB_ENUM(RequestRejectCall_FieldNumber) {
  RequestRejectCall_FieldNumber_CallId = 1,
  RequestRejectCall_FieldNumber_Reason = 2,
};

/**
 * Rejecting Call
 **/
GPB_FINAL @interface RequestRejectCall : GPBMessage

@property(nonatomic, readwrite) int64_t callId;

@property(nonatomic, readwrite) RejectCallReason reason;

@end

/**
 * Fetches the raw value of a @c RequestRejectCall's @c reason property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RequestRejectCall_Reason_RawValue(RequestRejectCall *message);
/**
 * Sets the raw value of an @c RequestRejectCall's @c reason property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRequestRejectCall_Reason_RawValue(RequestRejectCall *message, int32_t value);

#pragma mark - RequestDeleteCall

typedef GPB_ENUM(RequestDeleteCall_FieldNumber) {
  RequestDeleteCall_FieldNumber_CallId = 1,
};

GPB_FINAL @interface RequestDeleteCall : GPBMessage

@property(nonatomic, readwrite) int64_t callId;

@end

#pragma mark - RequestChangeCallDisplayName

typedef GPB_ENUM(RequestChangeCallDisplayName_FieldNumber) {
  RequestChangeCallDisplayName_FieldNumber_CallId = 1,
  RequestChangeCallDisplayName_FieldNumber_DisplayName = 2,
};

/**
 * Changes the call display name
 **/
GPB_FINAL @interface RequestChangeCallDisplayName : GPBMessage

@property(nonatomic, readwrite) int64_t callId;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *displayName;
/** Test to see if @c displayName has been set. */
@property(nonatomic, readwrite) BOOL hasDisplayName;

@end

#pragma mark - ICEServer

typedef GPB_ENUM(ICEServer_FieldNumber) {
  ICEServer_FieldNumber_URL = 1,
  ICEServer_FieldNumber_Username = 2,
  ICEServer_FieldNumber_Credential = 3,
};

/**
 * ICE Server description
 **/
GPB_FINAL @interface ICEServer : GPBMessage

/** / Url to server */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** / Optional username */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *username;
/** Test to see if @c username has been set. */
@property(nonatomic, readwrite) BOOL hasUsername;

/** / Optional credential */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *credential;
/** Test to see if @c credential has been set. */
@property(nonatomic, readwrite) BOOL hasCredential;

@end

#pragma mark - ICECandidate

typedef GPB_ENUM(ICECandidate_FieldNumber) {
  ICECandidate_FieldNumber_SdpMLineIndex = 1,
  ICECandidate_FieldNumber_SdpMid = 2,
  ICECandidate_FieldNumber_Sdp = 3,
};

/**
 * Structure representing an ICE candidate
 **/
GPB_FINAL @interface ICECandidate : GPBMessage

@property(nonatomic, readwrite) int32_t sdpMLineIndex;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sdpMid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sdp;

@end

#pragma mark - WebRTCSignaling

typedef GPB_ENUM(WebRTCSignaling_FieldNumber) {
  WebRTCSignaling_FieldNumber_AdvertiseSelf = 1,
  WebRTCSignaling_FieldNumber_AdvertiseMaster = 2,
  WebRTCSignaling_FieldNumber_AdvertisePeer = 3,
  WebRTCSignaling_FieldNumber_Candidate = 4,
  WebRTCSignaling_FieldNumber_GotIcecandidate = 5,
  WebRTCSignaling_FieldNumber_RemovedIcecandidates = 6,
  WebRTCSignaling_FieldNumber_Offer = 7,
  WebRTCSignaling_FieldNumber_Answer = 8,
  WebRTCSignaling_FieldNumber_NeedOffer = 9,
  WebRTCSignaling_FieldNumber_NegotinationSuccessful = 10,
  WebRTCSignaling_FieldNumber_EnableConnection = 11,
  WebRTCSignaling_FieldNumber_OnRenegotiationNeeded = 12,
  WebRTCSignaling_FieldNumber_CloseSession = 13,
  WebRTCSignaling_FieldNumber_NeedDisconnect = 14,
  WebRTCSignaling_FieldNumber_DTmf = 15,
  WebRTCSignaling_FieldNumber_CallStats = 16,
  WebRTCSignaling_FieldNumber_CallNameChanged = 17,
};

typedef GPB_ENUM(WebRTCSignaling_Body_OneOfCase) {
  WebRTCSignaling_Body_OneOfCase_GPBUnsetOneOfCase = 0,
  WebRTCSignaling_Body_OneOfCase_AdvertiseSelf = 1,
  WebRTCSignaling_Body_OneOfCase_AdvertiseMaster = 2,
  WebRTCSignaling_Body_OneOfCase_AdvertisePeer = 3,
  WebRTCSignaling_Body_OneOfCase_Candidate = 4,
  WebRTCSignaling_Body_OneOfCase_GotIcecandidate = 5,
  WebRTCSignaling_Body_OneOfCase_RemovedIcecandidates = 6,
  WebRTCSignaling_Body_OneOfCase_Offer = 7,
  WebRTCSignaling_Body_OneOfCase_Answer = 8,
  WebRTCSignaling_Body_OneOfCase_NeedOffer = 9,
  WebRTCSignaling_Body_OneOfCase_NegotinationSuccessful = 10,
  WebRTCSignaling_Body_OneOfCase_EnableConnection = 11,
  WebRTCSignaling_Body_OneOfCase_OnRenegotiationNeeded = 12,
  WebRTCSignaling_Body_OneOfCase_CloseSession = 13,
  WebRTCSignaling_Body_OneOfCase_NeedDisconnect = 14,
  WebRTCSignaling_Body_OneOfCase_DTmf = 15,
  WebRTCSignaling_Body_OneOfCase_CallStats = 16,
  WebRTCSignaling_Body_OneOfCase_CallNameChanged = 17,
};

GPB_FINAL @interface WebRTCSignaling : GPBMessage

@property(nonatomic, readonly) WebRTCSignaling_Body_OneOfCase bodyOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) AdvertiseSelf *advertiseSelf;

@property(nonatomic, readwrite, strong, null_resettable) AdvertiseMaster *advertiseMaster;

@property(nonatomic, readwrite, strong, null_resettable) AdvertisePeer *advertisePeer;

@property(nonatomic, readwrite, strong, null_resettable) Candidate *candidate;

@property(nonatomic, readwrite, strong, null_resettable) GotICECandidate *gotIcecandidate;

@property(nonatomic, readwrite, strong, null_resettable) RemovedICECandidates *removedIcecandidates;

@property(nonatomic, readwrite, strong, null_resettable) Offer *offer;

@property(nonatomic, readwrite, strong, null_resettable) Answer *answer;

@property(nonatomic, readwrite, strong, null_resettable) NeedOffer *needOffer;

@property(nonatomic, readwrite, strong, null_resettable) NegotinationSuccessful *negotinationSuccessful;

@property(nonatomic, readwrite, strong, null_resettable) EnableConnection *enableConnection;

@property(nonatomic, readwrite, strong, null_resettable) OnRenegotiationNeeded *onRenegotiationNeeded;

@property(nonatomic, readwrite, strong, null_resettable) CloseSession *closeSession;

@property(nonatomic, readwrite, strong, null_resettable) NeedDisconnect *needDisconnect;

@property(nonatomic, readwrite, strong, null_resettable) DTMF *dTmf;

@property(nonatomic, readwrite, strong, null_resettable) CallStats *callStats;

@property(nonatomic, readwrite, strong, null_resettable) CallNameChanged *callNameChanged;

@end

/**
 * Clears whatever value was set for the oneof 'body'.
 **/
void WebRTCSignaling_ClearBodyOneOfCase(WebRTCSignaling *message);

#pragma mark - AdvertiseSelf

typedef GPB_ENUM(AdvertiseSelf_FieldNumber) {
  AdvertiseSelf_FieldNumber_PeerSettings = 1,
};

/**
 * Advertizing self to a master mode
 **/
GPB_FINAL @interface AdvertiseSelf : GPBMessage

/** / Optional peer Settings */
@property(nonatomic, readwrite, strong, null_resettable) PeerSettings *peerSettings;
/** Test to see if @c peerSettings has been set. */
@property(nonatomic, readwrite) BOOL hasPeerSettings;

@end

#pragma mark - AdvertiseMaster

typedef GPB_ENUM(AdvertiseMaster_FieldNumber) {
  AdvertiseMaster_FieldNumber_ServerArray = 1,
  AdvertiseMaster_FieldNumber_CallApiVersion = 2,
  AdvertiseMaster_FieldNumber_CallName = 3,
};

/**
 * Sent by master
 **/
GPB_FINAL @interface AdvertiseMaster : GPBMessage

/** / a list of ICE servers */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ICEServer*> *serverArray;
/** The number of items in @c serverArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger serverArray_Count;

/** / a verison of the call signaling */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Value *callApiVersion;
/** Test to see if @c callApiVersion has been set. */
@property(nonatomic, readwrite) BOOL hasCallApiVersion;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *callName;
/** Test to see if @c callName has been set. */
@property(nonatomic, readwrite) BOOL hasCallName;

@end

#pragma mark - AdvertisePeer

typedef GPB_ENUM(AdvertisePeer_FieldNumber) {
  AdvertisePeer_FieldNumber_DeviceId = 1,
  AdvertisePeer_FieldNumber_PeerSettings = 2,
  AdvertisePeer_FieldNumber_IceServersArray = 3,
};

/**
 * Peer advertisement
 **/
GPB_FINAL @interface AdvertisePeer : GPBMessage

/** / device id of the peer */
@property(nonatomic, readwrite) int64_t deviceId;

/** / settings for the peer */
@property(nonatomic, readwrite, strong, null_resettable) PeerSettings *peerSettings;
/** Test to see if @c peerSettings has been set. */
@property(nonatomic, readwrite) BOOL hasPeerSettings;

/** / ice servers for the peer */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ICEServer*> *iceServersArray;
/** The number of items in @c iceServersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger iceServersArray_Count;

@end

#pragma mark - Candidate

typedef GPB_ENUM(Candidate_FieldNumber) {
  Candidate_FieldNumber_SessionId = 1,
  Candidate_FieldNumber_Index = 2,
  Candidate_FieldNumber_Id_p = 3,
  Candidate_FieldNumber_Sdp = 4,
};

/**
 * Candidate signal
 **/
GPB_FINAL @interface Candidate : GPBMessage

/** / Session Id of candidate */
@property(nonatomic, readwrite) int64_t sessionId;

/** / Index of candidate */
@property(nonatomic, readwrite) int32_t index;

/** / Id of candidate */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** / SDP of candidate */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sdp;

@end

#pragma mark - GotICECandidate

typedef GPB_ENUM(GotICECandidate_FieldNumber) {
  GotICECandidate_FieldNumber_SessionId = 1,
  GotICECandidate_FieldNumber_Candidate = 2,
};

/**
 * WebRTC IceCandidate add signal.
 * Used to let the other party know about new ICE candidate, usually from onIceCandidate callback of WebRTC
 **/
GPB_FINAL @interface GotICECandidate : GPBMessage

@property(nonatomic, readwrite) int64_t sessionId;

@property(nonatomic, readwrite, strong, null_resettable) ICECandidate *candidate;
/** Test to see if @c candidate has been set. */
@property(nonatomic, readwrite) BOOL hasCandidate;

@end

#pragma mark - RemovedICECandidates

typedef GPB_ENUM(RemovedICECandidates_FieldNumber) {
  RemovedICECandidates_FieldNumber_SessionId = 1,
  RemovedICECandidates_FieldNumber_CandidateArray = 2,
};

/**
 * WebRTC IceCandidate remove signal
 * Used to let the other party know about ICE candidate list change, usually from onIceCandidatesRemoved callback
 **/
GPB_FINAL @interface RemovedICECandidates : GPBMessage

@property(nonatomic, readwrite) int64_t sessionId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ICECandidate*> *candidateArray;
/** The number of items in @c candidateArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger candidateArray_Count;

@end

#pragma mark - Offer

typedef GPB_ENUM(Offer_FieldNumber) {
  Offer_FieldNumber_SessionId = 1,
  Offer_FieldNumber_Sdp = 2,
  Offer_FieldNumber_PeerSettings = 3,
};

/**
 * Offer signal
 **/
GPB_FINAL @interface Offer : GPBMessage

/** / Session Id of offer */
@property(nonatomic, readwrite) int64_t sessionId;

/** / Offer SDP */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sdp;

/** / Deprecated Own Peer settings */
@property(nonatomic, readwrite, strong, null_resettable) PeerSettings *peerSettings;
/** Test to see if @c peerSettings has been set. */
@property(nonatomic, readwrite) BOOL hasPeerSettings;

@end

#pragma mark - Answer

typedef GPB_ENUM(Answer_FieldNumber) {
  Answer_FieldNumber_SessionId = 1,
  Answer_FieldNumber_Sdp = 2,
};

/**
 * Answer signal
 **/
GPB_FINAL @interface Answer : GPBMessage

/** / Session Id of answer */
@property(nonatomic, readwrite) int64_t sessionId;

/** / Answer SDP */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sdp;

@end

#pragma mark - NeedOffer

typedef GPB_ENUM(NeedOffer_FieldNumber) {
  NeedOffer_FieldNumber_Device = 1,
  NeedOffer_FieldNumber_SessionId = 2,
  NeedOffer_FieldNumber_PeerSettings = 3,
};

/**
 * Notification from master that offer is required
 **/
GPB_FINAL @interface NeedOffer : GPBMessage

/** / Destination Device Id */
@property(nonatomic, readwrite) int64_t device;

/** / Session Id */
@property(nonatomic, readwrite) int64_t sessionId;

/** / Deprecated peer settings */
@property(nonatomic, readwrite, strong, null_resettable) PeerSettings *peerSettings;
/** Test to see if @c peerSettings has been set. */
@property(nonatomic, readwrite) BOOL hasPeerSettings;

@end

#pragma mark - NegotinationSuccessful

typedef GPB_ENUM(NegotinationSuccessful_FieldNumber) {
  NegotinationSuccessful_FieldNumber_Device = 1,
  NegotinationSuccessful_FieldNumber_SessionId = 2,
};

/**
 * Notification about on negotiation is successful
 **/
GPB_FINAL @interface NegotinationSuccessful : GPBMessage

/** / Device Id */
@property(nonatomic, readwrite) int64_t device;

/** / Session Id */
@property(nonatomic, readwrite) int64_t sessionId;

@end

#pragma mark - EnableConnection

typedef GPB_ENUM(EnableConnection_FieldNumber) {
  EnableConnection_FieldNumber_Device = 1,
  EnableConnection_FieldNumber_SessionId = 2,
};

/**
 * Notification about enabling connection to peer
 **/
GPB_FINAL @interface EnableConnection : GPBMessage

/** / Device Id */
@property(nonatomic, readwrite) int64_t device;

/** / Session Id */
@property(nonatomic, readwrite) int64_t sessionId;

@end

#pragma mark - OnRenegotiationNeeded

typedef GPB_ENUM(OnRenegotiationNeeded_FieldNumber) {
  OnRenegotiationNeeded_FieldNumber_Device = 1,
  OnRenegotiationNeeded_FieldNumber_SessionId = 2,
};

/**
 * Need renegotiate session. For example when streams are changed.
 **/
GPB_FINAL @interface OnRenegotiationNeeded : GPBMessage

/** / Device Id */
@property(nonatomic, readwrite) int64_t device;

/** / Session Id */
@property(nonatomic, readwrite) int64_t sessionId;

@end

#pragma mark - CloseSession

typedef GPB_ENUM(CloseSession_FieldNumber) {
  CloseSession_FieldNumber_Device = 1,
  CloseSession_FieldNumber_SessionId = 2,
};

/**
 * Close this session and be ready to
 **/
GPB_FINAL @interface CloseSession : GPBMessage

/** / Device Id */
@property(nonatomic, readwrite) int64_t device;

/** / Session Id for renegotiation */
@property(nonatomic, readwrite) int64_t sessionId;

@end

#pragma mark - NeedDisconnect

typedef GPB_ENUM(NeedDisconnect_FieldNumber) {
  NeedDisconnect_FieldNumber_Device = 1,
};

/**
 * Notification about requirement about required disconnection from peer
 **/
GPB_FINAL @interface NeedDisconnect : GPBMessage

/** / Device Id */
@property(nonatomic, readwrite) int64_t device;

@end

#pragma mark - DTMF

typedef GPB_ENUM(DTMF_FieldNumber) {
  DTMF_FieldNumber_Code = 1,
  DTMF_FieldNumber_Duration = 2,
};

/**
 * Emulates DTMF key press
 **/
GPB_FINAL @interface DTMF : GPBMessage

@property(nonatomic, readwrite) DTMFCode code;

/** / the duration (in milliseconds) */
@property(nonatomic, readwrite) int64_t duration;

@end

/**
 * Fetches the raw value of a @c DTMF's @c code property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DTMF_Code_RawValue(DTMF *message);
/**
 * Sets the raw value of an @c DTMF's @c code property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDTMF_Code_RawValue(DTMF *message, int32_t value);

#pragma mark - CallStats

typedef GPB_ENUM(CallStats_FieldNumber) {
  CallStats_FieldNumber_Type = 1,
  CallStats_FieldNumber_Value = 2,
};

/**
 * Used to send call statistics to the server
 **/
GPB_FINAL @interface CallStats : GPBMessage

/** / the type of the event */
@property(nonatomic, readwrite) CallStatsType type;

/** / the value of the event */
@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

@end

/**
 * Fetches the raw value of a @c CallStats's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CallStats_Type_RawValue(CallStats *message);
/**
 * Sets the raw value of an @c CallStats's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCallStats_Type_RawValue(CallStats *message, int32_t value);

#pragma mark - CallNameChanged

typedef GPB_ENUM(CallNameChanged_FieldNumber) {
  CallNameChanged_FieldNumber_CallName = 1,
};

/**
 * Used to notify participants about call name changes
 **/
GPB_FINAL @interface CallNameChanged : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *callName;
/** Test to see if @c callName has been set. */
@property(nonatomic, readwrite) BOOL hasCallName;

@end

#pragma mark - ActiveCall

typedef GPB_ENUM(ActiveCall_FieldNumber) {
  ActiveCall_FieldNumber_CallId = 1,
  ActiveCall_FieldNumber_Peer = 2,
  ActiveCall_FieldNumber_CallMembersArray = 3,
};

/**
 * Active Calls. Used in broadcasting states of current calls.
 **/
GPB_FINAL @interface ActiveCall : GPBMessage

@property(nonatomic, readwrite) int64_t callId;

/** / Call's peer */
@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** / Call Members */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CallMember*> *callMembersArray;
/** The number of items in @c callMembersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger callMembersArray_Count;

@end

#pragma mark - CallMemberStateHolder

typedef GPB_ENUM(CallMemberStateHolder_FieldNumber) {
  CallMemberStateHolder_FieldNumber_State = 1,
  CallMemberStateHolder_FieldNumber_FallbackIsRinging = 2,
  CallMemberStateHolder_FieldNumber_FallbackIsConnected = 3,
  CallMemberStateHolder_FieldNumber_FallbackIsConnecting = 4,
  CallMemberStateHolder_FieldNumber_FallbackIsRingingReached = 5,
  CallMemberStateHolder_FieldNumber_FallbackIsEnded = 6,
};

/**
 * Call Member state holder
 **/
GPB_FINAL @interface CallMemberStateHolder : GPBMessage

/** / State Value */
@property(nonatomic, readwrite) CallMemberState state;

/** / Fallback flag for future compatibility of state */
@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *fallbackIsRinging;
/** Test to see if @c fallbackIsRinging has been set. */
@property(nonatomic, readwrite) BOOL hasFallbackIsRinging;

/** / Fallback flag for future compatibility of state */
@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *fallbackIsConnected;
/** Test to see if @c fallbackIsConnected has been set. */
@property(nonatomic, readwrite) BOOL hasFallbackIsConnected;

/** / Fallback flag for future compatibility of state */
@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *fallbackIsConnecting;
/** Test to see if @c fallbackIsConnecting has been set. */
@property(nonatomic, readwrite) BOOL hasFallbackIsConnecting;

/** / Fallback flag for future compatibility of state */
@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *fallbackIsRingingReached;
/** Test to see if @c fallbackIsRingingReached has been set. */
@property(nonatomic, readwrite) BOOL hasFallbackIsRingingReached;

/** / Fallback flag for future compatibility of state */
@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *fallbackIsEnded;
/** Test to see if @c fallbackIsEnded has been set. */
@property(nonatomic, readwrite) BOOL hasFallbackIsEnded;

@end

/**
 * Fetches the raw value of a @c CallMemberStateHolder's @c state property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CallMemberStateHolder_State_RawValue(CallMemberStateHolder *message);
/**
 * Sets the raw value of an @c CallMemberStateHolder's @c state property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCallMemberStateHolder_State_RawValue(CallMemberStateHolder *message, int32_t value);

#pragma mark - CallMember

typedef GPB_ENUM(CallMember_FieldNumber) {
  CallMember_FieldNumber_UserId = 1,
  CallMember_FieldNumber_State = 3,
};

/**
 * Call Member
 **/
GPB_FINAL @interface CallMember : GPBMessage

/** / Member User Id */
@property(nonatomic, readwrite) int32_t userId;

/** / State of member */
@property(nonatomic, readwrite, strong, null_resettable) CallMemberStateHolder *state;
/** Test to see if @c state has been set. */
@property(nonatomic, readwrite) BOOL hasState;

@end

#pragma mark - PeerSettings

typedef GPB_ENUM(PeerSettings_FieldNumber) {
  PeerSettings_FieldNumber_CanPreConnect = 4,
  PeerSettings_FieldNumber_SendsOffer = 5,
  PeerSettings_FieldNumber_WaitForCandidates = 6,
  PeerSettings_FieldNumber_ClientInfo = 7,
};

/**
 * Peer Settings
 **/
GPB_FINAL @interface PeerSettings : GPBMessage

/** / If peer can preconnect before answer */
@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *canPreConnect;
/** Test to see if @c canPreConnect has been set. */
@property(nonatomic, readwrite) BOOL hasCanPreConnect;

/** / The peer already has an offer. The server should request offer from this peer. */
@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *sendsOffer;
/** Test to see if @c sendsOffer has been set. */
@property(nonatomic, readwrite) BOOL hasSendsOffer;

/** / Peer prefers to receive an offer/answer with ICE candidates collected */
@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *waitForCandidates;
/** Test to see if @c waitForCandidates has been set. */
@property(nonatomic, readwrite) BOOL hasWaitForCandidates;

/** / Description of this peer. Version, browser, OS, type, etc. */
@property(nonatomic, readwrite, strong, null_resettable) ClientInfo *clientInfo;
/** Test to see if @c clientInfo has been set. */
@property(nonatomic, readwrite) BOOL hasClientInfo;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
