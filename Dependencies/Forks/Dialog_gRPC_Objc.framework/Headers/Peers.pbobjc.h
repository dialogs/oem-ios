// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: peers.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class GPBStringValue;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PeerType

typedef GPB_ENUM(PeerType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PeerType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PeerType_PeertypeUnknown = 0,
  PeerType_PeertypePrivate = 1,
  PeerType_PeertypeGroup = 2,
  PeerType_PeertypeEncryptedprivate = 3,
  PeerType_PeertypeSip = 4,
};

GPBEnumDescriptor *PeerType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PeerType_IsValidValue(int32_t value);

#pragma mark - PeersRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface PeersRoot : GPBRootObject
@end

#pragma mark - Peer

typedef GPB_ENUM(Peer_FieldNumber) {
  Peer_FieldNumber_Type = 1,
  Peer_FieldNumber_Id_p = 2,
  Peer_FieldNumber_StrId = 3,
};

/**
 * Peer
 **/
GPB_FINAL @interface Peer : GPBMessage

@property(nonatomic, readwrite) PeerType type;

@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *strId;
/** Test to see if @c strId has been set. */
@property(nonatomic, readwrite) BOOL hasStrId;

@end

/**
 * Fetches the raw value of a @c Peer's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Peer_Type_RawValue(Peer *message);
/**
 * Sets the raw value of an @c Peer's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPeer_Type_RawValue(Peer *message, int32_t value);

#pragma mark - OutPeer

typedef GPB_ENUM(OutPeer_FieldNumber) {
  OutPeer_FieldNumber_Type = 1,
  OutPeer_FieldNumber_Id_p = 2,
  OutPeer_FieldNumber_AccessHash = 3,
  OutPeer_FieldNumber_StrId = 4,
};

/**
 * Out peer with access hash
 **/
GPB_FINAL @interface OutPeer : GPBMessage

@property(nonatomic, readwrite) PeerType type;

@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite) int64_t accessHash;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *strId;
/** Test to see if @c strId has been set. */
@property(nonatomic, readwrite) BOOL hasStrId;

@end

/**
 * Fetches the raw value of a @c OutPeer's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OutPeer_Type_RawValue(OutPeer *message);
/**
 * Sets the raw value of an @c OutPeer's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOutPeer_Type_RawValue(OutPeer *message, int32_t value);

#pragma mark - UserOutPeer

typedef GPB_ENUM(UserOutPeer_FieldNumber) {
  UserOutPeer_FieldNumber_Uid = 1,
  UserOutPeer_FieldNumber_AccessHash = 2,
};

/**
 * User's out peer
 **/
GPB_FINAL @interface UserOutPeer : GPBMessage

/** / User's id */
@property(nonatomic, readwrite) int32_t uid;

@property(nonatomic, readwrite) int64_t accessHash;

@end

#pragma mark - GroupOutPeer

typedef GPB_ENUM(GroupOutPeer_FieldNumber) {
  GroupOutPeer_FieldNumber_GroupId = 1,
  GroupOutPeer_FieldNumber_AccessHash = 2,
};

/**
 * Group's out peer
 **/
GPB_FINAL @interface GroupOutPeer : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

@property(nonatomic, readwrite) int64_t accessHash;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
