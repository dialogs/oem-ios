// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reactions.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class MessageReactions;
@class Peer;
@class Reaction;
@class UUIDValue;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ReactionsRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface ReactionsRoot : GPBRootObject
@end

#pragma mark - Reaction

typedef GPB_ENUM(Reaction_FieldNumber) {
  Reaction_FieldNumber_Code = 1,
  Reaction_FieldNumber_UsersArray = 2,
  Reaction_FieldNumber_UsersAmount = 3,
};

GPB_FINAL @interface Reaction : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *code;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *usersArray;
/** The number of items in @c usersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger usersArray_Count;

@property(nonatomic, readwrite) int32_t usersAmount;

@end

#pragma mark - MessageReactions

typedef GPB_ENUM(MessageReactions_FieldNumber) {
  MessageReactions_FieldNumber_Mid = 1,
  MessageReactions_FieldNumber_ReactionsArray = 2,
};

GPB_FINAL @interface MessageReactions : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Reaction*> *reactionsArray;
/** The number of items in @c reactionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger reactionsArray_Count;

@end

#pragma mark - MessageReactionsUpdate

typedef GPB_ENUM(MessageReactionsUpdate_FieldNumber) {
  MessageReactionsUpdate_FieldNumber_Peer = 1,
  MessageReactionsUpdate_FieldNumber_MessageReaction = 2,
  MessageReactionsUpdate_FieldNumber_PeerClock = 3,
  MessageReactionsUpdate_FieldNumber_PrevPeerClock = 4,
};

GPB_FINAL @interface MessageReactionsUpdate : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite, strong, null_resettable) MessageReactions *messageReaction;
/** Test to see if @c messageReaction has been set. */
@property(nonatomic, readwrite) BOOL hasMessageReaction;

@property(nonatomic, readwrite) int64_t peerClock;

@property(nonatomic, readwrite) int64_t prevPeerClock;

@end

#pragma mark - GetReactionsRequest

typedef GPB_ENUM(GetReactionsRequest_FieldNumber) {
  GetReactionsRequest_FieldNumber_FromClock = 1,
  GetReactionsRequest_FieldNumber_Peer = 2,
};

GPB_FINAL @interface GetReactionsRequest : GPBMessage

@property(nonatomic, readwrite) int64_t fromClock;

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@end

#pragma mark - GetReactionsResponse

typedef GPB_ENUM(GetReactionsResponse_FieldNumber) {
  GetReactionsResponse_FieldNumber_MessageReactionsArray = 1,
  GetReactionsResponse_FieldNumber_PeerClock = 2,
  GetReactionsResponse_FieldNumber_NextAvailable = 3,
};

GPB_FINAL @interface GetReactionsResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MessageReactions*> *messageReactionsArray;
/** The number of items in @c messageReactionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger messageReactionsArray_Count;

@property(nonatomic, readwrite) int64_t peerClock;

@property(nonatomic, readwrite) BOOL nextAvailable;

@end

#pragma mark - RequestSetMessageReaction

typedef GPB_ENUM(RequestSetMessageReaction_FieldNumber) {
  RequestSetMessageReaction_FieldNumber_Peer = 1,
  RequestSetMessageReaction_FieldNumber_Mid = 2,
  RequestSetMessageReaction_FieldNumber_Code = 3,
};

GPB_FINAL @interface RequestSetMessageReaction : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *code;

@end

#pragma mark - RequestRemoveMessageReaction

typedef GPB_ENUM(RequestRemoveMessageReaction_FieldNumber) {
  RequestRemoveMessageReaction_FieldNumber_Peer = 1,
  RequestRemoveMessageReaction_FieldNumber_Mid = 2,
  RequestRemoveMessageReaction_FieldNumber_Code = 3,
};

GPB_FINAL @interface RequestRemoveMessageReaction : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *code;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
