// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_bus.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Peer;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - EventBusRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface EventBusRoot : GPBRootObject
@end

#pragma mark - RequestJoinEventBus

typedef GPB_ENUM(RequestJoinEventBus_FieldNumber) {
  RequestJoinEventBus_FieldNumber_Id_p = 1,
  RequestJoinEventBus_FieldNumber_Timeout = 2,
};

/**
 * Joining Event Bus
 **/
GPB_FINAL @interface RequestJoinEventBus : GPBMessage

/** / Bus id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** / Join TTL */
@property(nonatomic, readwrite) int64_t timeout;

@end

#pragma mark - ResponseJoinEventBus

typedef GPB_ENUM(ResponseJoinEventBus_FieldNumber) {
  ResponseJoinEventBus_FieldNumber_DeviceId = 1,
};

GPB_FINAL @interface ResponseJoinEventBus : GPBMessage

/** / Generated device id for this event bus */
@property(nonatomic, readwrite) int64_t deviceId;

@end

#pragma mark - RequestKeepAliveEventBus

typedef GPB_ENUM(RequestKeepAliveEventBus_FieldNumber) {
  RequestKeepAliveEventBus_FieldNumber_Id_p = 1,
  RequestKeepAliveEventBus_FieldNumber_Timeout = 2,
};

/**
 * Keep Alive Event Bus
 **/
GPB_FINAL @interface RequestKeepAliveEventBus : GPBMessage

/** / Bus id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** / Keep TTL */
@property(nonatomic, readwrite) int64_t timeout;

@end

#pragma mark - RequestPostToEventBus

typedef GPB_ENUM(RequestPostToEventBus_FieldNumber) {
  RequestPostToEventBus_FieldNumber_Id_p = 1,
  RequestPostToEventBus_FieldNumber_DestinationsArray = 2,
  RequestPostToEventBus_FieldNumber_Message = 3,
};

/**
 * Event Bus Destination
 **/
GPB_FINAL @interface RequestPostToEventBus : GPBMessage

/** / Bus id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** / Destination device ids */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *destinationsArray;
/** The number of items in @c destinationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger destinationsArray_Count;

/** / Message to send */
@property(nonatomic, readwrite, copy, null_resettable) NSData *message;

@end

#pragma mark - UpdateEventBusDeviceConnected

typedef GPB_ENUM(UpdateEventBusDeviceConnected_FieldNumber) {
  UpdateEventBusDeviceConnected_FieldNumber_Id_p = 1,
  UpdateEventBusDeviceConnected_FieldNumber_UserId = 2,
  UpdateEventBusDeviceConnected_FieldNumber_DeviceId = 3,
  UpdateEventBusDeviceConnected_FieldNumber_Peer = 4,
};

/**
 * Update about pubsub device connected
 **/
GPB_FINAL @interface UpdateEventBusDeviceConnected : GPBMessage

/** / Bus id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** / Connected user id */
@property(nonatomic, readwrite) int32_t userId;

/** / Connected device id */
@property(nonatomic, readwrite) int64_t deviceId;

/** / Connected peer */
@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@end

#pragma mark - UpdateEventBusDeviceDisconnected

typedef GPB_ENUM(UpdateEventBusDeviceDisconnected_FieldNumber) {
  UpdateEventBusDeviceDisconnected_FieldNumber_Id_p = 1,
  UpdateEventBusDeviceDisconnected_FieldNumber_UserId = 2,
  UpdateEventBusDeviceDisconnected_FieldNumber_DeviceId = 3,
  UpdateEventBusDeviceDisconnected_FieldNumber_Peer = 4,
};

/**
 * Update about device disconnected
 **/
GPB_FINAL @interface UpdateEventBusDeviceDisconnected : GPBMessage

/** / Bus id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite) int32_t userId;

@property(nonatomic, readwrite) int64_t deviceId;

@property(nonatomic, readwrite, strong, null_resettable) Peer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@end

#pragma mark - UpdateEventBusMessage

typedef GPB_ENUM(UpdateEventBusMessage_FieldNumber) {
  UpdateEventBusMessage_FieldNumber_Id_p = 1,
  UpdateEventBusMessage_FieldNumber_SenderId = 2,
  UpdateEventBusMessage_FieldNumber_SenderDeviceId = 3,
  UpdateEventBusMessage_FieldNumber_Message = 4,
};

/**
 * Event Bus Message
 **/
GPB_FINAL @interface UpdateEventBusMessage : GPBMessage

/** / Bus id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite) int32_t senderId;

@property(nonatomic, readwrite) int64_t senderDeviceId;

@property(nonatomic, readwrite, copy, null_resettable) NSData *message;

@end

#pragma mark - UpdateEventBusDisposed

typedef GPB_ENUM(UpdateEventBusDisposed_FieldNumber) {
  UpdateEventBusDisposed_FieldNumber_Id_p = 1,
};

/**
 * Event Bus dispose
 **/
GPB_FINAL @interface UpdateEventBusDisposed : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
