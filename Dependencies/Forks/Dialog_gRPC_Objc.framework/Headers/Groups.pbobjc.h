// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: groups.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Avatar;
@class FileLocation;
@class GPBBytesValue;
@class GPBInt32Value;
@class GPBInt64Value;
@class GPBStringValue;
@class GPBTimestamp;
@class Group;
@class GroupData;
@class GroupMemberPermission;
@class GroupOutPeer;
@class Member;
@class UUIDValue;
@class UserOutPeer;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum GroupType

typedef GPB_ENUM(GroupType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  GroupType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GroupType_GrouptypeUnknown = 0,
  GroupType_GrouptypeGroup = 1,
  GroupType_GrouptypeChannel = 2,
  GroupType_GrouptypeThread = 4,
};

GPBEnumDescriptor *GroupType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GroupType_IsValidValue(int32_t value);

#pragma mark - Enum GroupAdminPermission

/** / Possible permissions on a group */
typedef GPB_ENUM(GroupAdminPermission) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  GroupAdminPermission_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GroupAdminPermission_GroupadminpermissionUnknown = 0,
  GroupAdminPermission_GroupadminpermissionEditshortname = 1,
  GroupAdminPermission_GroupadminpermissionInvite = 2,
  GroupAdminPermission_GroupadminpermissionKick = 3,
  GroupAdminPermission_GroupadminpermissionUpdateinfo = 4,
  GroupAdminPermission_GroupadminpermissionSetpermissions = 5,
  GroupAdminPermission_GroupadminpermissionEditmessage = 6,
  GroupAdminPermission_GroupadminpermissionDeletemessage = 7,
  GroupAdminPermission_GroupadminpermissionGetintegrationtoken = 8,
  GroupAdminPermission_GroupadminpermissionSendmessage = 9,
  GroupAdminPermission_GroupadminpermissionPinmessage = 10,
  GroupAdminPermission_GroupadminpermissionViewmembers = 11,

  /** / read only permission */
  GroupAdminPermission_GroupadminpermissionLeave = 12,
  GroupAdminPermission_GroupadminpermissionTargeting = 13,
  GroupAdminPermission_GroupadminpermissionDelete = 14,
  GroupAdminPermission_GroupadminpermissionManageConference = 15,
};

GPBEnumDescriptor *GroupAdminPermission_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GroupAdminPermission_IsValidValue(int32_t value);

#pragma mark - GroupsRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface GroupsRoot : GPBRootObject
@end

#pragma mark - Member

typedef GPB_ENUM(Member_FieldNumber) {
  Member_FieldNumber_Uid = 1,
  Member_FieldNumber_InvitedAt = 3,
  Member_FieldNumber_PermissionsArray = 5,
  Member_FieldNumber_Clock = 6,
  Member_FieldNumber_DeletedAt = 7,
};

/**
 * Member information
 **/
GPB_FINAL @interface Member : GPBMessage

@property(nonatomic, readwrite) int32_t uid;

@property(nonatomic, readwrite) int64_t invitedAt;

/** List of member permissions */
// |permissionsArray| contains |GroupAdminPermission|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *permissionsArray;
/** The number of items in @c permissionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger permissionsArray_Count;

@property(nonatomic, readwrite) int64_t clock;

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *deletedAt;
/** Test to see if @c deletedAt has been set. */
@property(nonatomic, readwrite) BOOL hasDeletedAt;

@end

#pragma mark - Group

typedef GPB_ENUM(Group_FieldNumber) {
  Group_FieldNumber_Id_p = 1,
  Group_FieldNumber_AccessHash = 2,
  Group_FieldNumber_Title = 3,
  Group_FieldNumber_Shortname = 19,
  Group_FieldNumber_GroupType = 25,
  Group_FieldNumber_Data_p = 29,
  Group_FieldNumber_SelfMember = 30,
};

/**
 * Group information
 **/
GPB_FINAL @interface Group : GPBMessage

/** / group id */
@property(nonatomic, readwrite) int32_t id_p;

/** / Access hash of group */
@property(nonatomic, readwrite) int64_t accessHash;

@property(nonatomic, readwrite, strong, null_resettable) GroupData *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@property(nonatomic, readwrite, strong, null_resettable) Member *selfMember;
/** Test to see if @c selfMember has been set. */
@property(nonatomic, readwrite) BOOL hasSelfMember;

/** For old bot sdk compatibility */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** / Group Type. Used only for displaying information. Default is GROUP. */
@property(nonatomic, readwrite) GroupType groupType;

/** / Group short name */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *shortname;
/** Test to see if @c shortname has been set. */
@property(nonatomic, readwrite) BOOL hasShortname;

@end

/**
 * Fetches the raw value of a @c Group's @c groupType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Group_GroupType_RawValue(Group *message);
/**
 * Sets the raw value of an @c Group's @c groupType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGroup_GroupType_RawValue(Group *message, int32_t value);

#pragma mark - GroupData

typedef GPB_ENUM(GroupData_FieldNumber) {
  GroupData_FieldNumber_SpaceId = 1,
  GroupData_FieldNumber_Title = 2,
  GroupData_FieldNumber_Avatar = 3,
  GroupData_FieldNumber_MembersAmount = 4,
  GroupData_FieldNumber_GroupType = 5,
  GroupData_FieldNumber_OwnerUserId = 6,
  GroupData_FieldNumber_CreatedAt = 7,
  GroupData_FieldNumber_About = 8,
  GroupData_FieldNumber_Shortname = 9,
  GroupData_FieldNumber_BasePermissionsArray = 10,
  GroupData_FieldNumber_Clock = 11,
  GroupData_FieldNumber_PinnedAt = 12,
  GroupData_FieldNumber_ConferenceLink = 13,
  GroupData_FieldNumber_MembersCountLimit = 14,
  GroupData_FieldNumber_DeletedAt = 15,
};

GPB_FINAL @interface GroupData : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *spaceId;
/** Test to see if @c spaceId has been set. */
@property(nonatomic, readwrite) BOOL hasSpaceId;

/** / Title of group */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** / Avatar of group */
@property(nonatomic, readwrite, strong, null_resettable) Avatar *avatar;
/** Test to see if @c avatar has been set. */
@property(nonatomic, readwrite) BOOL hasAvatar;

/** / Number of members */
@property(nonatomic, readwrite) int32_t membersAmount;

/** / Group Type. Used only for displaying information. Default is GROUP. */
@property(nonatomic, readwrite) GroupType groupType;

/** / Group creator */
@property(nonatomic, readwrite) int32_t ownerUserId;

/** / Date of creation */
@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *createdAt;
/** Test to see if @c createdAt has been set. */
@property(nonatomic, readwrite) BOOL hasCreatedAt;

/** / About of group */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *about;
/** Test to see if @c about has been set. */
@property(nonatomic, readwrite) BOOL hasAbout;

/** / Group short name */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *shortname;
/** Test to see if @c shortname has been set. */
@property(nonatomic, readwrite) BOOL hasShortname;

// |basePermissionsArray| contains |GroupAdminPermission|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *basePermissionsArray;
/** The number of items in @c basePermissionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger basePermissionsArray_Count;

@property(nonatomic, readwrite) int64_t clock;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *pinnedAt;
/** Test to see if @c pinnedAt has been set. */
@property(nonatomic, readwrite) BOOL hasPinnedAt;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *conferenceLink;
/** Test to see if @c conferenceLink has been set. */
@property(nonatomic, readwrite) BOOL hasConferenceLink;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Value *membersCountLimit;
/** Test to see if @c membersCountLimit has been set. */
@property(nonatomic, readwrite) BOOL hasMembersCountLimit;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *deletedAt;
/** Test to see if @c deletedAt has been set. */
@property(nonatomic, readwrite) BOOL hasDeletedAt;

@end

/**
 * Fetches the raw value of a @c GroupData's @c groupType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GroupData_GroupType_RawValue(GroupData *message);
/**
 * Sets the raw value of an @c GroupData's @c groupType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGroupData_GroupType_RawValue(GroupData *message, int32_t value);

#pragma mark - GroupPartialInfo

typedef GPB_ENUM(GroupPartialInfo_FieldNumber) {
  GroupPartialInfo_FieldNumber_Id_p = 1,
  GroupPartialInfo_FieldNumber_AccessHash = 2,
  GroupPartialInfo_FieldNumber_Clock = 3,
  GroupPartialInfo_FieldNumber_Type = 4,
  GroupPartialInfo_FieldNumber_Title = 5,
  GroupPartialInfo_FieldNumber_Shortname = 6,
  GroupPartialInfo_FieldNumber_Avatar = 7,
  GroupPartialInfo_FieldNumber_SelfMember = 8,
  GroupPartialInfo_FieldNumber_PinnedAt = 9,
};

GPB_FINAL @interface GroupPartialInfo : GPBMessage

@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite) int64_t accessHash;

@property(nonatomic, readwrite) int64_t clock;

@property(nonatomic, readwrite) GroupType type;

@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *shortname;
/** Test to see if @c shortname has been set. */
@property(nonatomic, readwrite) BOOL hasShortname;

@property(nonatomic, readwrite, strong, null_resettable) Avatar *avatar;
/** Test to see if @c avatar has been set. */
@property(nonatomic, readwrite) BOOL hasAvatar;

@property(nonatomic, readwrite, strong, null_resettable) Member *selfMember;
/** Test to see if @c selfMember has been set. */
@property(nonatomic, readwrite) BOOL hasSelfMember;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *pinnedAt;
/** Test to see if @c pinnedAt has been set. */
@property(nonatomic, readwrite) BOOL hasPinnedAt;

@end

/**
 * Fetches the raw value of a @c GroupPartialInfo's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GroupPartialInfo_Type_RawValue(GroupPartialInfo *message);
/**
 * Sets the raw value of an @c GroupPartialInfo's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGroupPartialInfo_Type_RawValue(GroupPartialInfo *message, int32_t value);

#pragma mark - UpdateGroup

typedef GPB_ENUM(UpdateGroup_FieldNumber) {
  UpdateGroup_FieldNumber_Id_p = 1,
  UpdateGroup_FieldNumber_Data_p = 2,
};

/**
 * Update about group data changed
 **/
GPB_FINAL @interface UpdateGroup : GPBMessage

@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite, strong, null_resettable) GroupData *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@end

#pragma mark - RequestLoadMembers

typedef GPB_ENUM(RequestLoadMembers_FieldNumber) {
  RequestLoadMembers_FieldNumber_Group = 1,
  RequestLoadMembers_FieldNumber_Limit = 2,
  RequestLoadMembers_FieldNumber_Next = 3,
};

/**
 * Loading group members
 **/
GPB_FINAL @interface RequestLoadMembers : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *group;
/** Test to see if @c group has been set. */
@property(nonatomic, readwrite) BOOL hasGroup;

@property(nonatomic, readwrite) int32_t limit;

/** / cursor */
@property(nonatomic, readwrite, strong, null_resettable) GPBBytesValue *next;
/** Test to see if @c next has been set. */
@property(nonatomic, readwrite) BOOL hasNext;

@end

#pragma mark - ResponseLoadMembers

typedef GPB_ENUM(ResponseLoadMembers_FieldNumber) {
  ResponseLoadMembers_FieldNumber_Cursor = 2,
  ResponseLoadMembers_FieldNumber_MembersArray = 3,
};

GPB_FINAL @interface ResponseLoadMembers : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBBytesValue *cursor;
/** Test to see if @c cursor has been set. */
@property(nonatomic, readwrite) BOOL hasCursor;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Member*> *membersArray;
/** The number of items in @c membersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger membersArray_Count;

@end

#pragma mark - UpdateGroupTitleChanged

typedef GPB_ENUM(UpdateGroupTitleChanged_FieldNumber) {
  UpdateGroupTitleChanged_FieldNumber_GroupId = 1,
  UpdateGroupTitleChanged_FieldNumber_Title = 2,
};

/**
 * Update about title changed
 **/
GPB_FINAL @interface UpdateGroupTitleChanged : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@end

#pragma mark - UpdateGroupAvatarChanged

typedef GPB_ENUM(UpdateGroupAvatarChanged_FieldNumber) {
  UpdateGroupAvatarChanged_FieldNumber_GroupId = 1,
  UpdateGroupAvatarChanged_FieldNumber_Avatar = 2,
};

/**
 * Update about avatar changed
 **/
GPB_FINAL @interface UpdateGroupAvatarChanged : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

@property(nonatomic, readwrite, strong, null_resettable) Avatar *avatar;
/** Test to see if @c avatar has been set. */
@property(nonatomic, readwrite) BOOL hasAvatar;

@end

#pragma mark - UpdateGroupAboutChanged

typedef GPB_ENUM(UpdateGroupAboutChanged_FieldNumber) {
  UpdateGroupAboutChanged_FieldNumber_GroupId = 1,
  UpdateGroupAboutChanged_FieldNumber_About = 2,
};

/**
 * Update about about changed
 **/
GPB_FINAL @interface UpdateGroupAboutChanged : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *about;
/** Test to see if @c about has been set. */
@property(nonatomic, readwrite) BOOL hasAbout;

@end

#pragma mark - UpdateGroupOwnerChanged

typedef GPB_ENUM(UpdateGroupOwnerChanged_FieldNumber) {
  UpdateGroupOwnerChanged_FieldNumber_GroupId = 1,
  UpdateGroupOwnerChanged_FieldNumber_UserId = 2,
};

/**
 * Update about owner changed
 **/
GPB_FINAL @interface UpdateGroupOwnerChanged : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

/** / new owner */
@property(nonatomic, readwrite) int32_t userId;

@end

#pragma mark - UpdateGroupBasePermissionsChanged

typedef GPB_ENUM(UpdateGroupBasePermissionsChanged_FieldNumber) {
  UpdateGroupBasePermissionsChanged_FieldNumber_GroupId = 1,
  UpdateGroupBasePermissionsChanged_FieldNumber_BasePermissionsArray = 2,
};

/**
 * Update about base group permissions changed
 **/
GPB_FINAL @interface UpdateGroupBasePermissionsChanged : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

/** / new base permissions */
// |basePermissionsArray| contains |GroupAdminPermission|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *basePermissionsArray;
/** The number of items in @c basePermissionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger basePermissionsArray_Count;

@end

#pragma mark - UpdateGroupMembersUpdated

typedef GPB_ENUM(UpdateGroupMembersUpdated_FieldNumber) {
  UpdateGroupMembersUpdated_FieldNumber_GroupId = 1,
  UpdateGroupMembersUpdated_FieldNumber_MembersArray = 2,
};

/**
 * Update about members updated
 **/
GPB_FINAL @interface UpdateGroupMembersUpdated : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Member*> *membersArray;
/** The number of items in @c membersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger membersArray_Count;

@end

#pragma mark - UpdateGroupMemberDiff

typedef GPB_ENUM(UpdateGroupMemberDiff_FieldNumber) {
  UpdateGroupMemberDiff_FieldNumber_RemovedUsersArray = 1,
  UpdateGroupMemberDiff_FieldNumber_AddedMembersArray = 2,
  UpdateGroupMemberDiff_FieldNumber_MembersCount = 3,
};

/**
 * Update about members changed
 **/
GPB_FINAL @interface UpdateGroupMemberDiff : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *removedUsersArray;
/** The number of items in @c removedUsersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger removedUsersArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Member*> *addedMembersArray;
/** The number of items in @c addedMembersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger addedMembersArray_Count;

@property(nonatomic, readwrite) int32_t membersCount;

@end

#pragma mark - UpdateGroupMembersCountChanged

typedef GPB_ENUM(UpdateGroupMembersCountChanged_FieldNumber) {
  UpdateGroupMembersCountChanged_FieldNumber_GroupId = 1,
  UpdateGroupMembersCountChanged_FieldNumber_MembersCount = 2,
};

/**
 * Update about members count changed
 **/
GPB_FINAL @interface UpdateGroupMembersCountChanged : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

@property(nonatomic, readwrite) int32_t membersCount;

@end

#pragma mark - RequestCreateGroup

typedef GPB_ENUM(RequestCreateGroup_FieldNumber) {
  RequestCreateGroup_FieldNumber_Rid = 1,
  RequestCreateGroup_FieldNumber_Title = 2,
  RequestCreateGroup_FieldNumber_UsersArray = 3,
  RequestCreateGroup_FieldNumber_GroupType = 6,
  RequestCreateGroup_FieldNumber_OptimizationsArray = 7,
  RequestCreateGroup_FieldNumber_Username = 8,
  RequestCreateGroup_FieldNumber_SpaceId = 9,
  RequestCreateGroup_FieldNumber_BasePermissionsArray = 10,
};

/**
 * Creating group chat
 **/
GPB_FINAL @interface RequestCreateGroup : GPBMessage

/** / Id for query deduplication */
@property(nonatomic, readwrite) int64_t rid;

@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *spaceId;
/** Test to see if @c spaceId has been set. */
@property(nonatomic, readwrite) BOOL hasSpaceId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** / members */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserOutPeer*> *usersArray;
/** The number of items in @c usersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger usersArray_Count;

/** / group or channel */
@property(nonatomic, readwrite) GroupType groupType;

/** / optional shortname of a group, group will be public if set */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *username;
/** Test to see if @c username has been set. */
@property(nonatomic, readwrite) BOOL hasUsername;

/** / Optimizations drops some info from response to decrease traffic and latency */
// |optimizationsArray| contains |UpdateOptimization|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *optimizationsArray;
/** The number of items in @c optimizationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger optimizationsArray_Count;

/** / Base permissions for invited members */
// |basePermissionsArray| contains |GroupAdminPermission|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *basePermissionsArray;
/** The number of items in @c basePermissionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger basePermissionsArray_Count;

@end

/**
 * Fetches the raw value of a @c RequestCreateGroup's @c groupType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RequestCreateGroup_GroupType_RawValue(RequestCreateGroup *message);
/**
 * Sets the raw value of an @c RequestCreateGroup's @c groupType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRequestCreateGroup_GroupType_RawValue(RequestCreateGroup *message, int32_t value);

#pragma mark - ResponseCreateGroup

typedef GPB_ENUM(ResponseCreateGroup_FieldNumber) {
  ResponseCreateGroup_FieldNumber_Seq = 1,
  ResponseCreateGroup_FieldNumber_State = 2,
  ResponseCreateGroup_FieldNumber_Group = 3,
  ResponseCreateGroup_FieldNumber_UserPeersArray = 5,
};

GPB_FINAL @interface ResponseCreateGroup : GPBMessage

/** / deprecated */
@property(nonatomic, readwrite) int32_t seq;

@property(nonatomic, readwrite, copy, null_resettable) NSData *state;

/** / created group */
@property(nonatomic, readwrite, strong, null_resettable) Group *group;
/** Test to see if @c group has been set. */
@property(nonatomic, readwrite) BOOL hasGroup;

/** / empty if dropped by optimizations */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserOutPeer*> *userPeersArray;
/** The number of items in @c userPeersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger userPeersArray_Count;

@end

#pragma mark - RequestEditGroupTitle

typedef GPB_ENUM(RequestEditGroupTitle_FieldNumber) {
  RequestEditGroupTitle_FieldNumber_GroupPeer = 1,
  RequestEditGroupTitle_FieldNumber_Title = 3,
  RequestEditGroupTitle_FieldNumber_Rid = 4,
  RequestEditGroupTitle_FieldNumber_OptimizationsArray = 5,
};

/**
 * Changing group title
 **/
GPB_FINAL @interface RequestEditGroupTitle : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *groupPeer;
/** Test to see if @c groupPeer has been set. */
@property(nonatomic, readwrite) BOOL hasGroupPeer;

/** / Id for query deduplication */
@property(nonatomic, readwrite) int64_t rid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** / Optimizations drops some info from response to decrease traffic and latency */
// |optimizationsArray| contains |UpdateOptimization|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *optimizationsArray;
/** The number of items in @c optimizationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger optimizationsArray_Count;

@end

#pragma mark - RequestSetGroupShortname

typedef GPB_ENUM(RequestSetGroupShortname_FieldNumber) {
  RequestSetGroupShortname_FieldNumber_Peer = 1,
  RequestSetGroupShortname_FieldNumber_Shortname = 2,
};

/**
 * Sets group short name
 **/
GPB_FINAL @interface RequestSetGroupShortname : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

/** / if shortname was empty, then group will become public */
@property(nonatomic, readwrite, copy, null_resettable) NSString *shortname;

@end

#pragma mark - RequestEditGroupAvatar

typedef GPB_ENUM(RequestEditGroupAvatar_FieldNumber) {
  RequestEditGroupAvatar_FieldNumber_GroupPeer = 1,
  RequestEditGroupAvatar_FieldNumber_FileLocation = 3,
  RequestEditGroupAvatar_FieldNumber_Rid = 4,
  RequestEditGroupAvatar_FieldNumber_OptimizationsArray = 5,
};

/**
 * Changing group avatar
 **/
GPB_FINAL @interface RequestEditGroupAvatar : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *groupPeer;
/** Test to see if @c groupPeer has been set. */
@property(nonatomic, readwrite) BOOL hasGroupPeer;

/** / Id for query deduplication */
@property(nonatomic, readwrite) int64_t rid;

@property(nonatomic, readwrite, strong, null_resettable) FileLocation *fileLocation;
/** Test to see if @c fileLocation has been set. */
@property(nonatomic, readwrite) BOOL hasFileLocation;

/** / Optimizations drops some info from response to decrease traffic and latency */
// |optimizationsArray| contains |UpdateOptimization|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *optimizationsArray;
/** The number of items in @c optimizationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger optimizationsArray_Count;

@end

#pragma mark - ResponseEditGroupAvatar

typedef GPB_ENUM(ResponseEditGroupAvatar_FieldNumber) {
  ResponseEditGroupAvatar_FieldNumber_Avatar = 1,
  ResponseEditGroupAvatar_FieldNumber_Seq = 2,
  ResponseEditGroupAvatar_FieldNumber_State = 3,
  ResponseEditGroupAvatar_FieldNumber_Date = 4,
  ResponseEditGroupAvatar_FieldNumber_Mid = 5,
};

GPB_FINAL @interface ResponseEditGroupAvatar : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Avatar *avatar;
/** Test to see if @c avatar has been set. */
@property(nonatomic, readwrite) BOOL hasAvatar;

/** / deprecated */
@property(nonatomic, readwrite) int32_t seq;

@property(nonatomic, readwrite, copy, null_resettable) NSData *state;

@property(nonatomic, readwrite) int64_t date;

@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@end

#pragma mark - RequestRemoveGroupAvatar

typedef GPB_ENUM(RequestRemoveGroupAvatar_FieldNumber) {
  RequestRemoveGroupAvatar_FieldNumber_GroupPeer = 1,
  RequestRemoveGroupAvatar_FieldNumber_Rid = 4,
  RequestRemoveGroupAvatar_FieldNumber_OptimizationsArray = 5,
};

/**
 * Removing group avatar
 **/
GPB_FINAL @interface RequestRemoveGroupAvatar : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *groupPeer;
/** Test to see if @c groupPeer has been set. */
@property(nonatomic, readwrite) BOOL hasGroupPeer;

/** / Id for query deduplication */
@property(nonatomic, readwrite) int64_t rid;

/** / Optimizations drops some info from response to decrease traffic and latency */
// |optimizationsArray| contains |UpdateOptimization|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *optimizationsArray;
/** The number of items in @c optimizationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger optimizationsArray_Count;

@end

#pragma mark - RequestEditGroupAbout

typedef GPB_ENUM(RequestEditGroupAbout_FieldNumber) {
  RequestEditGroupAbout_FieldNumber_GroupPeer = 1,
  RequestEditGroupAbout_FieldNumber_Rid = 2,
  RequestEditGroupAbout_FieldNumber_About = 3,
  RequestEditGroupAbout_FieldNumber_OptimizationsArray = 5,
};

/**
 * Edit Group About
 **/
GPB_FINAL @interface RequestEditGroupAbout : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *groupPeer;
/** Test to see if @c groupPeer has been set. */
@property(nonatomic, readwrite) BOOL hasGroupPeer;

/** / Id for query deduplication */
@property(nonatomic, readwrite) int64_t rid;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *about;
/** Test to see if @c about has been set. */
@property(nonatomic, readwrite) BOOL hasAbout;

/** / Optimizations drops some info from response to decrease traffic and latency */
// |optimizationsArray| contains |UpdateOptimization|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *optimizationsArray;
/** The number of items in @c optimizationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger optimizationsArray_Count;

@end

#pragma mark - RequestEditGroupBasePermissions

typedef GPB_ENUM(RequestEditGroupBasePermissions_FieldNumber) {
  RequestEditGroupBasePermissions_FieldNumber_GroupPeer = 1,
  RequestEditGroupBasePermissions_FieldNumber_RandomId = 2,
  RequestEditGroupBasePermissions_FieldNumber_GrantedPermissionsArray = 3,
  RequestEditGroupBasePermissions_FieldNumber_RevokedPermissionsArray = 4,
};

GPB_FINAL @interface RequestEditGroupBasePermissions : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *groupPeer;
/** Test to see if @c groupPeer has been set. */
@property(nonatomic, readwrite) BOOL hasGroupPeer;

/** / Id for query deduplication */
@property(nonatomic, readwrite) int64_t randomId;

// |grantedPermissionsArray| contains |GroupAdminPermission|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *grantedPermissionsArray;
/** The number of items in @c grantedPermissionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger grantedPermissionsArray_Count;

// |revokedPermissionsArray| contains |GroupAdminPermission|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *revokedPermissionsArray;
/** The number of items in @c revokedPermissionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger revokedPermissionsArray_Count;

@end

#pragma mark - RequestEditMemberPermissions

typedef GPB_ENUM(RequestEditMemberPermissions_FieldNumber) {
  RequestEditMemberPermissions_FieldNumber_GroupPeer = 1,
  RequestEditMemberPermissions_FieldNumber_UserPeer = 2,
  RequestEditMemberPermissions_FieldNumber_GrantedPermissionsArray = 3,
  RequestEditMemberPermissions_FieldNumber_RevokedPermissionsArray = 4,
};

GPB_FINAL @interface RequestEditMemberPermissions : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *groupPeer;
/** Test to see if @c groupPeer has been set. */
@property(nonatomic, readwrite) BOOL hasGroupPeer;

@property(nonatomic, readwrite, strong, null_resettable) UserOutPeer *userPeer;
/** Test to see if @c userPeer has been set. */
@property(nonatomic, readwrite) BOOL hasUserPeer;

// |grantedPermissionsArray| contains |GroupAdminPermission|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *grantedPermissionsArray;
/** The number of items in @c grantedPermissionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger grantedPermissionsArray_Count;

// |revokedPermissionsArray| contains |GroupAdminPermission|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *revokedPermissionsArray;
/** The number of items in @c revokedPermissionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger revokedPermissionsArray_Count;

@end

#pragma mark - ResponseMember

typedef GPB_ENUM(ResponseMember_FieldNumber) {
  ResponseMember_FieldNumber_Member = 1,
};

GPB_FINAL @interface ResponseMember : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Member *member;
/** Test to see if @c member has been set. */
@property(nonatomic, readwrite) BOOL hasMember;

@end

#pragma mark - RequestInviteUser

typedef GPB_ENUM(RequestInviteUser_FieldNumber) {
  RequestInviteUser_FieldNumber_GroupPeer = 1,
  RequestInviteUser_FieldNumber_User = 3,
  RequestInviteUser_FieldNumber_Rid = 4,
  RequestInviteUser_FieldNumber_OptimizationsArray = 5,
};

/**
 * Inviting user to group
 **/
GPB_FINAL @interface RequestInviteUser : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *groupPeer;
/** Test to see if @c groupPeer has been set. */
@property(nonatomic, readwrite) BOOL hasGroupPeer;

/** / Id for query deduplication */
@property(nonatomic, readwrite) int64_t rid;

@property(nonatomic, readwrite, strong, null_resettable) UserOutPeer *user;
/** Test to see if @c user has been set. */
@property(nonatomic, readwrite) BOOL hasUser;

/** / Optimizations drops some info from response to decrease traffic and latency */
// |optimizationsArray| contains |UpdateOptimization|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *optimizationsArray;
/** The number of items in @c optimizationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger optimizationsArray_Count;

@end

#pragma mark - RequestLeaveGroup

typedef GPB_ENUM(RequestLeaveGroup_FieldNumber) {
  RequestLeaveGroup_FieldNumber_GroupPeer = 1,
  RequestLeaveGroup_FieldNumber_Rid = 2,
  RequestLeaveGroup_FieldNumber_OptimizationsArray = 3,
};

/**
 * Leaving group
 **/
GPB_FINAL @interface RequestLeaveGroup : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *groupPeer;
/** Test to see if @c groupPeer has been set. */
@property(nonatomic, readwrite) BOOL hasGroupPeer;

/** / Id for query deduplication */
@property(nonatomic, readwrite) int64_t rid;

/** / Optimizations drops some info from response to decrease traffic and latency */
// |optimizationsArray| contains |UpdateOptimization|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *optimizationsArray;
/** The number of items in @c optimizationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger optimizationsArray_Count;

@end

#pragma mark - RequestKickUser

typedef GPB_ENUM(RequestKickUser_FieldNumber) {
  RequestKickUser_FieldNumber_GroupPeer = 1,
  RequestKickUser_FieldNumber_User = 3,
  RequestKickUser_FieldNumber_Rid = 4,
  RequestKickUser_FieldNumber_OptimizationsArray = 5,
};

/**
 * Kicking user from group
 **/
GPB_FINAL @interface RequestKickUser : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *groupPeer;
/** Test to see if @c groupPeer has been set. */
@property(nonatomic, readwrite) BOOL hasGroupPeer;

/** / Id for query deduplication */
@property(nonatomic, readwrite) int64_t rid;

@property(nonatomic, readwrite, strong, null_resettable) UserOutPeer *user;
/** Test to see if @c user has been set. */
@property(nonatomic, readwrite) BOOL hasUser;

/** / Optimizations drops some info from response to decrease traffic and latency */
// |optimizationsArray| contains |UpdateOptimization|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *optimizationsArray;
/** The number of items in @c optimizationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger optimizationsArray_Count;

@end

#pragma mark - RequestMakeUserAdmin

typedef GPB_ENUM(RequestMakeUserAdmin_FieldNumber) {
  RequestMakeUserAdmin_FieldNumber_GroupPeer = 1,
  RequestMakeUserAdmin_FieldNumber_UserPeer = 2,
  RequestMakeUserAdmin_FieldNumber_PermissionsArray = 3,
};

/**
 * Make user admin
 **/
GPB_FINAL @interface RequestMakeUserAdmin : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *groupPeer;
/** Test to see if @c groupPeer has been set. */
@property(nonatomic, readwrite) BOOL hasGroupPeer;

@property(nonatomic, readwrite, strong, null_resettable) UserOutPeer *userPeer;
/** Test to see if @c userPeer has been set. */
@property(nonatomic, readwrite) BOOL hasUserPeer;

// |permissionsArray| contains |GroupAdminPermission|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *permissionsArray;
/** The number of items in @c permissionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger permissionsArray_Count;

@end

#pragma mark - GroupMemberPermission

typedef GPB_ENUM(GroupMemberPermission_FieldNumber) {
  GroupMemberPermission_FieldNumber_UserId = 1,
  GroupMemberPermission_FieldNumber_PermissionsArray = 2,
};

/**
 * A struct mapping a group member to their permissions
 * userId the id of the group member
 * permissions a list of permissions that user has
 **/
GPB_FINAL @interface GroupMemberPermission : GPBMessage

@property(nonatomic, readwrite) int32_t userId;

// |permissionsArray| contains |GroupAdminPermission|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *permissionsArray;
/** The number of items in @c permissionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger permissionsArray_Count;

@end

#pragma mark - RequestGetGroupMemberPermissions

typedef GPB_ENUM(RequestGetGroupMemberPermissions_FieldNumber) {
  RequestGetGroupMemberPermissions_FieldNumber_GroupId = 1,
  RequestGetGroupMemberPermissions_FieldNumber_UserIdsArray = 2,
};

/**
 * Fetches the group administration permissions for each of the users from the list
 **/
GPB_FINAL @interface RequestGetGroupMemberPermissions : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *userIdsArray;
/** The number of items in @c userIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger userIdsArray_Count;

@end

#pragma mark - ResponseGetGroupMemberPermissions

typedef GPB_ENUM(ResponseGetGroupMemberPermissions_FieldNumber) {
  ResponseGetGroupMemberPermissions_FieldNumber_PermissionsArray = 1,
};

GPB_FINAL @interface ResponseGetGroupMemberPermissions : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GroupMemberPermission*> *permissionsArray;
/** The number of items in @c permissionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger permissionsArray_Count;

@end

#pragma mark - UpdateGroupMemberPermissionsChanged

typedef GPB_ENUM(UpdateGroupMemberPermissionsChanged_FieldNumber) {
  UpdateGroupMemberPermissionsChanged_FieldNumber_GroupId = 1,
  UpdateGroupMemberPermissionsChanged_FieldNumber_UserId = 2,
  UpdateGroupMemberPermissionsChanged_FieldNumber_PermissionsArray = 3,
};

/**
 * Update about the user's permissions
 **/
GPB_FINAL @interface UpdateGroupMemberPermissionsChanged : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

@property(nonatomic, readwrite) int32_t userId;

// |permissionsArray| contains |GroupAdminPermission|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *permissionsArray;
/** The number of items in @c permissionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger permissionsArray_Count;

@end

#pragma mark - RequestTransferOwnership

typedef GPB_ENUM(RequestTransferOwnership_FieldNumber) {
  RequestTransferOwnership_FieldNumber_GroupPeer = 1,
  RequestTransferOwnership_FieldNumber_NewOwner = 2,
};

/**
 * Transfer ownership of group
 **/
GPB_FINAL @interface RequestTransferOwnership : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *groupPeer;
/** Test to see if @c groupPeer has been set. */
@property(nonatomic, readwrite) BOOL hasGroupPeer;

@property(nonatomic, readwrite) int32_t newOwner;

@end

#pragma mark - ResponseInviteUrl

typedef GPB_ENUM(ResponseInviteUrl_FieldNumber) {
  ResponseInviteUrl_FieldNumber_URL = 1,
};

/**
 * Response for invite url methods
 **/
GPB_FINAL @interface ResponseInviteUrl : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@end

#pragma mark - RequestGetGroupInviteUrl

typedef GPB_ENUM(RequestGetGroupInviteUrl_FieldNumber) {
  RequestGetGroupInviteUrl_FieldNumber_GroupPeer = 1,
};

/**
 * Building invite url
 **/
GPB_FINAL @interface RequestGetGroupInviteUrl : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *groupPeer;
/** Test to see if @c groupPeer has been set. */
@property(nonatomic, readwrite) BOOL hasGroupPeer;

@end

#pragma mark - RequestGetGroupInviteUrlBase

/**
 * Get group invite url base
 **/
GPB_FINAL @interface RequestGetGroupInviteUrlBase : GPBMessage

@end

#pragma mark - ResponseGetGroupInviteUrlBase

typedef GPB_ENUM(ResponseGetGroupInviteUrlBase_FieldNumber) {
  ResponseGetGroupInviteUrlBase_FieldNumber_URL = 1,
};

GPB_FINAL @interface ResponseGetGroupInviteUrlBase : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@end

#pragma mark - RequestRevokeInviteUrl

typedef GPB_ENUM(RequestRevokeInviteUrl_FieldNumber) {
  RequestRevokeInviteUrl_FieldNumber_GroupPeer = 1,
};

/**
 * Revoking invite urls
 **/
GPB_FINAL @interface RequestRevokeInviteUrl : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *groupPeer;
/** Test to see if @c groupPeer has been set. */
@property(nonatomic, readwrite) BOOL hasGroupPeer;

@end

#pragma mark - RequestJoinGroup

typedef GPB_ENUM(RequestJoinGroup_FieldNumber) {
  RequestJoinGroup_FieldNumber_Token = 1,
  RequestJoinGroup_FieldNumber_OptimizationsArray = 2,
};

/**
 * Join group method
 **/
GPB_FINAL @interface RequestJoinGroup : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

// |optimizationsArray| contains |UpdateOptimization|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *optimizationsArray;
/** The number of items in @c optimizationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger optimizationsArray_Count;

@end

#pragma mark - ResponseJoinGroup

typedef GPB_ENUM(ResponseJoinGroup_FieldNumber) {
  ResponseJoinGroup_FieldNumber_Group = 1,
  ResponseJoinGroup_FieldNumber_Seq = 2,
  ResponseJoinGroup_FieldNumber_State = 3,
  ResponseJoinGroup_FieldNumber_Date = 4,
  ResponseJoinGroup_FieldNumber_UserPeersArray = 7,
  ResponseJoinGroup_FieldNumber_Mid = 8,
};

GPB_FINAL @interface ResponseJoinGroup : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Group *group;
/** Test to see if @c group has been set. */
@property(nonatomic, readwrite) BOOL hasGroup;

/** / empty if dropped by optimizations */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserOutPeer*> *userPeersArray;
/** The number of items in @c userPeersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger userPeersArray_Count;

/** / deprecated */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

/** / deprecated */
@property(nonatomic, readwrite) int32_t seq;

@property(nonatomic, readwrite, copy, null_resettable) NSData *state;

@property(nonatomic, readwrite) int64_t date;

@end

#pragma mark - RequestJoinGroupByPeer

typedef GPB_ENUM(RequestJoinGroupByPeer_FieldNumber) {
  RequestJoinGroupByPeer_FieldNumber_Peer = 1,
};

/**
 * Join group by peer
 **/
GPB_FINAL @interface RequestJoinGroupByPeer : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@end

#pragma mark - RequestDeleteGroup

typedef GPB_ENUM(RequestDeleteGroup_FieldNumber) {
  RequestDeleteGroup_FieldNumber_GroupId = 1,
};

GPB_FINAL @interface RequestDeleteGroup : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

@end

#pragma mark - RequestGetGroupPartialInfo

typedef GPB_ENUM(RequestGetGroupPartialInfo_FieldNumber) {
  RequestGetGroupPartialInfo_FieldNumber_Token = 1,
};

/**
 * get group info by invite token
 **/
GPB_FINAL @interface RequestGetGroupPartialInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@end

#pragma mark - UpdateGroupMemberInvited

typedef GPB_ENUM(UpdateGroupMemberInvited_FieldNumber) {
  UpdateGroupMemberInvited_FieldNumber_GroupId = 1,
  UpdateGroupMemberInvited_FieldNumber_Member = 2,
};

/**
 * *
 * Update notifies that some user got invited to the group
 **/
GPB_FINAL @interface UpdateGroupMemberInvited : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

@property(nonatomic, readwrite, strong, null_resettable) Member *member;
/** Test to see if @c member has been set. */
@property(nonatomic, readwrite) BOOL hasMember;

@end

#pragma mark - UpdateGroupInviteObsolete

typedef GPB_ENUM(UpdateGroupInviteObsolete_FieldNumber) {
  UpdateGroupInviteObsolete_FieldNumber_GroupId = 1,
  UpdateGroupInviteObsolete_FieldNumber_InviteUid = 5,
  UpdateGroupInviteObsolete_FieldNumber_Date = 8,
  UpdateGroupInviteObsolete_FieldNumber_Rid = 9,
  UpdateGroupInviteObsolete_FieldNumber_Mid = 10,
};

/**
 * *
 * Update notifies that current user got invited to the group
 * \@deprecated
 **/
GPB_FINAL @interface UpdateGroupInviteObsolete : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

/** / deprecated */
@property(nonatomic, readwrite) int64_t rid;

/** / deprecated */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@property(nonatomic, readwrite) int32_t inviteUid;

@property(nonatomic, readwrite) int64_t date;

@end

#pragma mark - UpdateGroupUserInvitedObsolete

typedef GPB_ENUM(UpdateGroupUserInvitedObsolete_FieldNumber) {
  UpdateGroupUserInvitedObsolete_FieldNumber_GroupId = 1,
  UpdateGroupUserInvitedObsolete_FieldNumber_Uid = 2,
  UpdateGroupUserInvitedObsolete_FieldNumber_InviterUid = 3,
  UpdateGroupUserInvitedObsolete_FieldNumber_Date = 4,
  UpdateGroupUserInvitedObsolete_FieldNumber_Rid = 5,
  UpdateGroupUserInvitedObsolete_FieldNumber_Mid = 6,
};

/**
 * *
 * Update notifies that some user got invited to the group
 * \@deprecated
 **/
GPB_FINAL @interface UpdateGroupUserInvitedObsolete : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

/** / Id for deduplication */
@property(nonatomic, readwrite) int64_t rid;

/** / deprecated */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@property(nonatomic, readwrite) int32_t uid;

@property(nonatomic, readwrite) int32_t inviterUid;

@property(nonatomic, readwrite) int64_t date;

@end

#pragma mark - UpdateGroupUserLeaveObsolete

typedef GPB_ENUM(UpdateGroupUserLeaveObsolete_FieldNumber) {
  UpdateGroupUserLeaveObsolete_FieldNumber_GroupId = 1,
  UpdateGroupUserLeaveObsolete_FieldNumber_Uid = 2,
  UpdateGroupUserLeaveObsolete_FieldNumber_Date = 3,
  UpdateGroupUserLeaveObsolete_FieldNumber_Mid = 5,
};

/**
 * Update about leaving user
 **/
GPB_FINAL @interface UpdateGroupUserLeaveObsolete : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

/** / deprecated */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@property(nonatomic, readwrite) int32_t uid;

@property(nonatomic, readwrite) int64_t date;

@end

#pragma mark - UpdateGroupUserKickObsolete

typedef GPB_ENUM(UpdateGroupUserKickObsolete_FieldNumber) {
  UpdateGroupUserKickObsolete_FieldNumber_GroupId = 1,
  UpdateGroupUserKickObsolete_FieldNumber_Uid = 2,
  UpdateGroupUserKickObsolete_FieldNumber_KickerUid = 3,
  UpdateGroupUserKickObsolete_FieldNumber_Date = 4,
  UpdateGroupUserKickObsolete_FieldNumber_Mid = 6,
};

/**
 * Update about kicking user
 **/
GPB_FINAL @interface UpdateGroupUserKickObsolete : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

/** / deprecated */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@property(nonatomic, readwrite) int32_t uid;

@property(nonatomic, readwrite) int32_t kickerUid;

@property(nonatomic, readwrite) int64_t date;

@end

#pragma mark - UpdateGroupMembersUpdateObsolete

typedef GPB_ENUM(UpdateGroupMembersUpdateObsolete_FieldNumber) {
  UpdateGroupMembersUpdateObsolete_FieldNumber_GroupId = 1,
  UpdateGroupMembersUpdateObsolete_FieldNumber_MembersArray = 2,
};

/**
 * Silent group members update
 **/
GPB_FINAL @interface UpdateGroupMembersUpdateObsolete : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Member*> *membersArray;
/** The number of items in @c membersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger membersArray_Count;

@end

#pragma mark - UpdateGroupTitleChangedObsolete

typedef GPB_ENUM(UpdateGroupTitleChangedObsolete_FieldNumber) {
  UpdateGroupTitleChangedObsolete_FieldNumber_GroupId = 1,
  UpdateGroupTitleChangedObsolete_FieldNumber_Uid = 2,
  UpdateGroupTitleChangedObsolete_FieldNumber_Title = 3,
  UpdateGroupTitleChangedObsolete_FieldNumber_Date = 4,
  UpdateGroupTitleChangedObsolete_FieldNumber_Mid = 6,
};

/**
 * Update about group title change
 **/
GPB_FINAL @interface UpdateGroupTitleChangedObsolete : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

/** / deprecated */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@property(nonatomic, readwrite) int32_t uid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@property(nonatomic, readwrite) int64_t date;

@end

#pragma mark - UpdateGroupAboutChangedObsolete

typedef GPB_ENUM(UpdateGroupAboutChangedObsolete_FieldNumber) {
  UpdateGroupAboutChangedObsolete_FieldNumber_GroupId = 1,
  UpdateGroupAboutChangedObsolete_FieldNumber_About = 2,
};

/**
 * Update about group about change
 **/
GPB_FINAL @interface UpdateGroupAboutChangedObsolete : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *about;
/** Test to see if @c about has been set. */
@property(nonatomic, readwrite) BOOL hasAbout;

@end

#pragma mark - UpdateGroupAvatarChangedObsolete

typedef GPB_ENUM(UpdateGroupAvatarChangedObsolete_FieldNumber) {
  UpdateGroupAvatarChangedObsolete_FieldNumber_GroupId = 1,
  UpdateGroupAvatarChangedObsolete_FieldNumber_Uid = 2,
  UpdateGroupAvatarChangedObsolete_FieldNumber_Avatar = 3,
  UpdateGroupAvatarChangedObsolete_FieldNumber_Date = 4,
  UpdateGroupAvatarChangedObsolete_FieldNumber_Mid = 6,
};

/**
 * Update about group avatar change
 **/
GPB_FINAL @interface UpdateGroupAvatarChangedObsolete : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

/** / deprecated */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@property(nonatomic, readwrite) int32_t uid;

@property(nonatomic, readwrite, strong, null_resettable) Avatar *avatar;
/** Test to see if @c avatar has been set. */
@property(nonatomic, readwrite) BOOL hasAvatar;

@property(nonatomic, readwrite) int64_t date;

@end

#pragma mark - UpdateGroupShortnameChanged

typedef GPB_ENUM(UpdateGroupShortnameChanged_FieldNumber) {
  UpdateGroupShortnameChanged_FieldNumber_GroupId = 1,
  UpdateGroupShortnameChanged_FieldNumber_Shortname = 2,
  UpdateGroupShortnameChanged_FieldNumber_Uid = 3,
};

/**
 * Update group short name
 **/
GPB_FINAL @interface UpdateGroupShortnameChanged : GPBMessage

@property(nonatomic, readwrite) int32_t groupId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *shortname;

@property(nonatomic, readwrite) int32_t uid;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
