// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: miscellaneous.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Any;
@class CallsConfig;
@class Config;
@class Discover;
@class GPBBoolValue;
@class GPBDoubleValue;
@class GPBInt32Value;
@class GPBInt64Value;
@class GPBStringValue;
@class InvitesConfig;
@class OutPeer;
@class RecursiveMapValue;
@class RecursiveMapValue_Array;
@class RecursiveMapValue_Item;
@class RecursiveMapValue_Value;
@class ServerMetaInfo;
@class ServicePeers;
@class UUIDValue;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum SupportedServerMethodsType

typedef GPB_ENUM(SupportedServerMethodsType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  SupportedServerMethodsType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  SupportedServerMethodsType_NoneSupportedMethods = 0,
  SupportedServerMethodsType_ChangePassword = 1,
};

GPBEnumDescriptor *SupportedServerMethodsType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL SupportedServerMethodsType_IsValidValue(int32_t value);

#pragma mark - Enum RtcpMuxPolicy

typedef GPB_ENUM(RtcpMuxPolicy) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RtcpMuxPolicy_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RtcpMuxPolicy_RtcpmuxpolicyUnknown = 0,
  RtcpMuxPolicy_RtcpmuxpolicyNegotiate = 1,
  RtcpMuxPolicy_RtcpmuxpolicyRequire = 2,
};

GPBEnumDescriptor *RtcpMuxPolicy_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RtcpMuxPolicy_IsValidValue(int32_t value);

#pragma mark - Enum UpdateOptimization

typedef GPB_ENUM(UpdateOptimization) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  UpdateOptimization_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UpdateOptimization_UpdateoptimizationUnknown = 0,

  /** For old bot sdk compatibility */
  UpdateOptimization_UpdateoptimizationStripEntities = 2,
};

GPBEnumDescriptor *UpdateOptimization_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL UpdateOptimization_IsValidValue(int32_t value);

#pragma mark - MiscellaneousRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface MiscellaneousRoot : GPBRootObject
@end

#pragma mark - ResponseVoid

/**
 * Empty response
 **/
GPB_FINAL @interface ResponseVoid : GPBMessage

@end

#pragma mark - ResponseSeq

typedef GPB_ENUM(ResponseSeq_FieldNumber) {
  ResponseSeq_FieldNumber_Seq = 1,
  ResponseSeq_FieldNumber_State = 2,
  ResponseSeq_FieldNumber_Date = 3,
};

/**
 * Sequence response. Methods that return this value must process response in particular order
 **/
GPB_FINAL @interface ResponseSeq : GPBMessage

@property(nonatomic, readwrite) int32_t seq;

@property(nonatomic, readwrite, copy, null_resettable) NSData *state;

@property(nonatomic, readwrite) int64_t date;

@end

#pragma mark - ResponseSeqDate

typedef GPB_ENUM(ResponseSeqDate_FieldNumber) {
  ResponseSeqDate_FieldNumber_Seq = 1,
  ResponseSeqDate_FieldNumber_State = 2,
  ResponseSeqDate_FieldNumber_Date = 3,
  ResponseSeqDate_FieldNumber_Mid = 4,
};

/**
 * Sequence response with date. Methods that return this value must process response in particular order
 **/
GPB_FINAL @interface ResponseSeqDate : GPBMessage

@property(nonatomic, readwrite) int32_t seq;

@property(nonatomic, readwrite, copy, null_resettable) NSData *state;

@property(nonatomic, readwrite) int64_t date;

@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@end

#pragma mark - ResponseSeqDateMid

typedef GPB_ENUM(ResponseSeqDateMid_FieldNumber) {
  ResponseSeqDateMid_FieldNumber_Seq = 1,
  ResponseSeqDateMid_FieldNumber_State = 2,
  ResponseSeqDateMid_FieldNumber_Date = 3,
  ResponseSeqDateMid_FieldNumber_Mid = 4,
};

/**
 * Response with seq, date and messageId
 **/
GPB_FINAL @interface ResponseSeqDateMid : GPBMessage

@property(nonatomic, readwrite) int32_t seq;

@property(nonatomic, readwrite, copy, null_resettable) NSData *state;

@property(nonatomic, readwrite) int64_t date;

@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *mid;
/** Test to see if @c mid has been set. */
@property(nonatomic, readwrite) BOOL hasMid;

@end

#pragma mark - ResponseBool

typedef GPB_ENUM(ResponseBool_FieldNumber) {
  ResponseBool_FieldNumber_Value = 1,
};

/**
 * Boolean response
 **/
GPB_FINAL @interface ResponseBool : GPBMessage

@property(nonatomic, readwrite) BOOL value;

@end

#pragma mark - Config

typedef GPB_ENUM(Config_FieldNumber) {
  Config_FieldNumber_MaxGroupSize = 1,
  Config_FieldNumber_Discover = 2,
  Config_FieldNumber_ExtensionsArray = 3,
  Config_FieldNumber_ShareEndpoint = 4,
  Config_FieldNumber_CallsConfig = 5,
  Config_FieldNumber_GroupInviteConfig = 6,
  Config_FieldNumber_ServerMetaInfo = 7,
  Config_FieldNumber_CustomProfileSchema = 8,
  Config_FieldNumber_ServicePeers = 9,
  Config_FieldNumber_ClientKeepAlive = 10,
  Config_FieldNumber_SupportedMethodsArray = 11,
  Config_FieldNumber_MaxChannelSize = 12,
};

/**
 * Configuration of system
 * maxGroupSize Current maximum group size
 * discover Discover configuration
 * shareEndpoint Share endpoint
 * callsConfig Calls configuration
 * groupInviteConfig Group invite configuration
 * serverMetaInfo Server meta information (version, etc.)
 * customProfileSchema Custom profile JSON Schema
 * servicePeers Service peers supported interpreted by the client
 **/
GPB_FINAL @interface Config : GPBMessage

@property(nonatomic, readwrite) int32_t maxGroupSize;

@property(nonatomic, readwrite, strong, null_resettable) Discover *discover;
/** Test to see if @c discover has been set. */
@property(nonatomic, readwrite) BOOL hasDiscover;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *shareEndpoint;
/** Test to see if @c shareEndpoint has been set. */
@property(nonatomic, readwrite) BOOL hasShareEndpoint;

@property(nonatomic, readwrite, strong, null_resettable) CallsConfig *callsConfig;
/** Test to see if @c callsConfig has been set. */
@property(nonatomic, readwrite) BOOL hasCallsConfig;

@property(nonatomic, readwrite, strong, null_resettable) InvitesConfig *groupInviteConfig;
/** Test to see if @c groupInviteConfig has been set. */
@property(nonatomic, readwrite) BOOL hasGroupInviteConfig;

@property(nonatomic, readwrite, strong, null_resettable) ServerMetaInfo *serverMetaInfo;
/** Test to see if @c serverMetaInfo has been set. */
@property(nonatomic, readwrite) BOOL hasServerMetaInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *customProfileSchema;

@property(nonatomic, readwrite, strong, null_resettable) ServicePeers *servicePeers;
/** Test to see if @c servicePeers has been set. */
@property(nonatomic, readwrite) BOOL hasServicePeers;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Any*> *extensionsArray;
/** The number of items in @c extensionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger extensionsArray_Count;

@property(nonatomic, readwrite) int64_t clientKeepAlive;

// |supportedMethodsArray| contains |SupportedServerMethodsType|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *supportedMethodsArray;
/** The number of items in @c supportedMethodsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger supportedMethodsArray_Count;

@property(nonatomic, readwrite) int32_t maxChannelSize;

@end

#pragma mark - ServicePeers

typedef GPB_ENUM(ServicePeers_FieldNumber) {
  ServicePeers_FieldNumber_Security = 1,
  ServicePeers_FieldNumber_Support = 2,
  ServicePeers_FieldNumber_Stash = 3,
};

/**
 * Service peers
 **/
GPB_FINAL @interface ServicePeers : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *security;
/** Test to see if @c security has been set. */
@property(nonatomic, readwrite) BOOL hasSecurity;

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *support;
/** Test to see if @c support has been set. */
@property(nonatomic, readwrite) BOOL hasSupport;

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *stash;
/** Test to see if @c stash has been set. */
@property(nonatomic, readwrite) BOOL hasStash;

@end

#pragma mark - ServerMetaInfo

typedef GPB_ENUM(ServerMetaInfo_FieldNumber) {
  ServerMetaInfo_FieldNumber_ReleaseDate = 1,
  ServerMetaInfo_FieldNumber_ApiVersion = 2,
};

/**
 * Some info about the servr
 * releaseDate Server release date in milliseconds
 * apiVersion Server api version
 **/
GPB_FINAL @interface ServerMetaInfo : GPBMessage

@property(nonatomic, readwrite) int64_t releaseDate;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *apiVersion;
/** Test to see if @c apiVersion has been set. */
@property(nonatomic, readwrite) BOOL hasApiVersion;

@end

#pragma mark - CallsConfig

typedef GPB_ENUM(CallsConfig_FieldNumber) {
  CallsConfig_FieldNumber_CallsEnabled = 1,
  CallsConfig_FieldNumber_VideoCallsEnabled = 2,
  CallsConfig_FieldNumber_GroupCallsEnabled = 3,
  CallsConfig_FieldNumber_GroupCallsMaxMembers = 4,
  CallsConfig_FieldNumber_RtcpMuxPolicy = 5,
  CallsConfig_FieldNumber_EmojiSecurityEnabled = 6,
  CallsConfig_FieldNumber_ScreenSharingEnabled = 7,
};

/**
 * Calls configuration
 * callsEnabled If true then client should enable calls
 * videoCallsEnabled If true then client should enable video calls
 * groupCallsEnabled If true then client should enable group calls
 * groupCallsMaxMembers Determines how many members may participate in call
 * rtcpMuxPolicy The RTCP mux policy to use when gathering ICE candidates
 * emojiSecurityEnabled If true then client should send and render emoji security
 * screenSharingEnabled If true then client should enable screen sharing
 **/
GPB_FINAL @interface CallsConfig : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *callsEnabled;
/** Test to see if @c callsEnabled has been set. */
@property(nonatomic, readwrite) BOOL hasCallsEnabled;

@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *videoCallsEnabled;
/** Test to see if @c videoCallsEnabled has been set. */
@property(nonatomic, readwrite) BOOL hasVideoCallsEnabled;

@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *groupCallsEnabled;
/** Test to see if @c groupCallsEnabled has been set. */
@property(nonatomic, readwrite) BOOL hasGroupCallsEnabled;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Value *groupCallsMaxMembers;
/** Test to see if @c groupCallsMaxMembers has been set. */
@property(nonatomic, readwrite) BOOL hasGroupCallsMaxMembers;

@property(nonatomic, readwrite) RtcpMuxPolicy rtcpMuxPolicy;

@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *emojiSecurityEnabled;
/** Test to see if @c emojiSecurityEnabled has been set. */
@property(nonatomic, readwrite) BOOL hasEmojiSecurityEnabled;

@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *screenSharingEnabled;
/** Test to see if @c screenSharingEnabled has been set. */
@property(nonatomic, readwrite) BOOL hasScreenSharingEnabled;

@end

/**
 * Fetches the raw value of a @c CallsConfig's @c rtcpMuxPolicy property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CallsConfig_RtcpMuxPolicy_RawValue(CallsConfig *message);
/**
 * Sets the raw value of an @c CallsConfig's @c rtcpMuxPolicy property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCallsConfig_RtcpMuxPolicy_RawValue(CallsConfig *message, int32_t value);

#pragma mark - InvitesConfig

typedef GPB_ENUM(InvitesConfig_FieldNumber) {
  InvitesConfig_FieldNumber_BaseURL = 1,
  InvitesConfig_FieldNumber_GroupInviteURLPrefix = 2,
  InvitesConfig_FieldNumber_ResolveURLPrefix = 3,
  InvitesConfig_FieldNumber_ShareInviteURL = 4,
};

/**
 * Group invites configuration
 * baseUrl Base URL part
 * groupInviteUrlPrefix Prefix for private group invite detection
 * resolveUrlPrefix Prefix for public groups and users link detection
 * shareInviteUrl Independent URL for external app sharing
 **/
GPB_FINAL @interface InvitesConfig : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *baseURL;
/** Test to see if @c baseURL has been set. */
@property(nonatomic, readwrite) BOOL hasBaseURL;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *groupInviteURLPrefix;
/** Test to see if @c groupInviteURLPrefix has been set. */
@property(nonatomic, readwrite) BOOL hasGroupInviteURLPrefix;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *resolveURLPrefix;
/** Test to see if @c resolveURLPrefix has been set. */
@property(nonatomic, readwrite) BOOL hasResolveURLPrefix;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *shareInviteURL;
/** Test to see if @c shareInviteURL has been set. */
@property(nonatomic, readwrite) BOOL hasShareInviteURL;

@end

#pragma mark - Discover

typedef GPB_ENUM(Discover_FieldNumber) {
  Discover_FieldNumber_PeersArray = 1,
};

/**
 * Discover description
 * peers peers
 **/
GPB_FINAL @interface Discover : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OutPeer*> *peersArray;
/** The number of items in @c peersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger peersArray_Count;

@end

#pragma mark - Extension

typedef GPB_ENUM(Extension_FieldNumber) {
  Extension_FieldNumber_Id_p = 1,
  Extension_FieldNumber_Data_p = 2,
};

/**
 * Extention
 * id Extension id
 * data Extension data
 **/
GPB_FINAL @interface Extension : GPBMessage

@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

@end

#pragma mark - Any

typedef GPB_ENUM(Any_FieldNumber) {
  Any_FieldNumber_TypeURL = 1,
  Any_FieldNumber_Data_p = 2,
};

/**
 * Any
 * typeUrl type url
 * data data
 **/
GPB_FINAL @interface Any : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *typeURL;

@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

@end

#pragma mark - UpdateConfig

typedef GPB_ENUM(UpdateConfig_FieldNumber) {
  UpdateConfig_FieldNumber_Config = 1,
  UpdateConfig_FieldNumber_ConfigHash = 2,
};

/**
 * Update about config change
 **/
GPB_FINAL @interface UpdateConfig : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Config *config;
/** Test to see if @c config has been set. */
@property(nonatomic, readwrite) BOOL hasConfig;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *configHash;
/** Test to see if @c configHash has been set. */
@property(nonatomic, readwrite) BOOL hasConfigHash;

@end

#pragma mark - RecursiveMapValue

typedef GPB_ENUM(RecursiveMapValue_FieldNumber) {
  RecursiveMapValue_FieldNumber_ItemsArray = 1,
};

GPB_FINAL @interface RecursiveMapValue : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RecursiveMapValue_Item*> *itemsArray;
/** The number of items in @c itemsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger itemsArray_Count;

@end

#pragma mark - RecursiveMapValue_Value

typedef GPB_ENUM(RecursiveMapValue_Value_FieldNumber) {
  RecursiveMapValue_Value_FieldNumber_D = 2,
  RecursiveMapValue_Value_FieldNumber_I32 = 3,
  RecursiveMapValue_Value_FieldNumber_I64 = 4,
  RecursiveMapValue_Value_FieldNumber_Str = 5,
  RecursiveMapValue_Value_FieldNumber_Rec = 6,
  RecursiveMapValue_Value_FieldNumber_ArrayRec = 7,
};

typedef GPB_ENUM(RecursiveMapValue_Value_Value_OneOfCase) {
  RecursiveMapValue_Value_Value_OneOfCase_GPBUnsetOneOfCase = 0,
  RecursiveMapValue_Value_Value_OneOfCase_D = 2,
  RecursiveMapValue_Value_Value_OneOfCase_I32 = 3,
  RecursiveMapValue_Value_Value_OneOfCase_I64 = 4,
  RecursiveMapValue_Value_Value_OneOfCase_Str = 5,
  RecursiveMapValue_Value_Value_OneOfCase_Rec = 6,
  RecursiveMapValue_Value_Value_OneOfCase_ArrayRec = 7,
};

GPB_FINAL @interface RecursiveMapValue_Value : GPBMessage

@property(nonatomic, readonly) RecursiveMapValue_Value_Value_OneOfCase valueOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *d;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Value *i32;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *i64;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *str;

@property(nonatomic, readwrite, strong, null_resettable) RecursiveMapValue *rec;

@property(nonatomic, readwrite, strong, null_resettable) RecursiveMapValue_Array *arrayRec;

@end

/**
 * Clears whatever value was set for the oneof 'value'.
 **/
void RecursiveMapValue_Value_ClearValueOneOfCase(RecursiveMapValue_Value *message);

#pragma mark - RecursiveMapValue_Array

typedef GPB_ENUM(RecursiveMapValue_Array_FieldNumber) {
  RecursiveMapValue_Array_FieldNumber_ValuesArray = 1,
};

GPB_FINAL @interface RecursiveMapValue_Array : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RecursiveMapValue_Value*> *valuesArray;
/** The number of items in @c valuesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger valuesArray_Count;

@end

#pragma mark - RecursiveMapValue_Item

typedef GPB_ENUM(RecursiveMapValue_Item_FieldNumber) {
  RecursiveMapValue_Item_FieldNumber_Key = 1,
  RecursiveMapValue_Item_FieldNumber_Value = 2,
};

GPB_FINAL @interface RecursiveMapValue_Item : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@property(nonatomic, readwrite, strong, null_resettable) RecursiveMapValue_Value *value;
/** Test to see if @c value has been set. */
@property(nonatomic, readwrite) BOOL hasValue;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
