// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: registration.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum AuthorizationMethod

typedef GPB_ENUM(AuthorizationMethod) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  AuthorizationMethod_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  AuthorizationMethod_Nothing = 0,
  AuthorizationMethod_LoginPassword = 1,
  AuthorizationMethod_Phone = 2,
  AuthorizationMethod_Email = 3,
  AuthorizationMethod_Certificate = 4,
};

GPBEnumDescriptor *AuthorizationMethod_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL AuthorizationMethod_IsValidValue(int32_t value);

#pragma mark - RegistrationRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface RegistrationRoot : GPBRootObject
@end

#pragma mark - RequestRegisterDevice

typedef GPB_ENUM(RequestRegisterDevice_FieldNumber) {
  RequestRegisterDevice_FieldNumber_ClientPk = 1,
  RequestRegisterDevice_FieldNumber_AppId = 2,
  RequestRegisterDevice_FieldNumber_AppTitle = 3,
  RequestRegisterDevice_FieldNumber_DeviceTitle = 4,
};

GPB_FINAL @interface RequestRegisterDevice : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *clientPk;

@property(nonatomic, readwrite) int32_t appId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appTitle;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceTitle;

@end

#pragma mark - ResponseDeviceRequest

typedef GPB_ENUM(ResponseDeviceRequest_FieldNumber) {
  ResponseDeviceRequest_FieldNumber_ServerPk = 1,
  ResponseDeviceRequest_FieldNumber_AuthId = 2,
  ResponseDeviceRequest_FieldNumber_Token = 3,
  ResponseDeviceRequest_FieldNumber_AuthMethodSeqArray = 4,
};

GPB_FINAL @interface ResponseDeviceRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *serverPk;

@property(nonatomic, readwrite) int64_t authId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

/** / Sequence of the required authorization methods */
// |authMethodSeqArray| contains |AuthorizationMethod|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *authMethodSeqArray;
/** The number of items in @c authMethodSeqArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger authMethodSeqArray_Count;

@end

#pragma mark - RegisterDeprecatedDeviceRequest

GPB_FINAL @interface RegisterDeprecatedDeviceRequest : GPBMessage

@end

#pragma mark - RequestExchangeAuthIdForToken

typedef GPB_ENUM(RequestExchangeAuthIdForToken_FieldNumber) {
  RequestExchangeAuthIdForToken_FieldNumber_AuthId = 1,
  RequestExchangeAuthIdForToken_FieldNumber_Signature = 2,
};

GPB_FINAL @interface RequestExchangeAuthIdForToken : GPBMessage

@property(nonatomic, readwrite) int64_t authId;

@property(nonatomic, readwrite, copy, null_resettable) NSData *signature;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
