// Code generated by gRPC proto compiler.  DO NOT EDIT!
// source: registration.proto

#if !defined(GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO) || !GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO
#import "Registration.pbobjc.h"
#endif

#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
#import <ProtoRPC/ProtoService.h>
#import <ProtoRPC/ProtoRPCLegacy.h>
#import <RxLibrary/GRXWriteable.h>
#import <RxLibrary/GRXWriter.h>
#endif

@class RegisterDeprecatedDeviceRequest;
@class RequestExchangeAuthIdForToken;
@class RequestRegisterDevice;
@class ResponseDeviceRequest;

#if !defined(GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO) || !GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO
  #import "Scalapb.pbobjc.h"
  #import "Annotations.pbobjc.h"
#endif

@class GRPCUnaryProtoCall;
@class GRPCStreamingProtoCall;
@class GRPCCallOptions;
@protocol GRPCProtoResponseHandler;
@class GRPCProtoCall;


NS_ASSUME_NONNULL_BEGIN

@protocol Registration2 <NSObject>

#pragma mark ExchangeAuthIdForToken(RequestExchangeAuthIdForToken) returns (ResponseDeviceRequest)

- (GRPCUnaryProtoCall *)exchangeAuthIdForTokenWithMessage:(RequestExchangeAuthIdForToken *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark RegisterDevice(RequestRegisterDevice) returns (ResponseDeviceRequest)

/**
 * / register device to get auth token
 */
- (GRPCUnaryProtoCall *)registerDeviceWithMessage:(RequestRegisterDevice *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark RegisterDeprecatedDevice(RegisterDeprecatedDeviceRequest) returns (ResponseDeviceRequest)

/**
 * deprecated
 */
- (GRPCUnaryProtoCall *)registerDeprecatedDeviceWithMessage:(RegisterDeprecatedDeviceRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

@end

/**
 * The methods in this protocol belong to a set of old APIs that have been deprecated. They do not
 * recognize call options provided in the initializer. Using the v2 protocol is recommended.
 */
@protocol Registration <NSObject>

#pragma mark ExchangeAuthIdForToken(RequestExchangeAuthIdForToken) returns (ResponseDeviceRequest)

- (void)exchangeAuthIdForTokenWithRequest:(RequestExchangeAuthIdForToken *)request handler:(void(^)(ResponseDeviceRequest *_Nullable response, NSError *_Nullable error))handler;

- (GRPCProtoCall *)RPCToExchangeAuthIdForTokenWithRequest:(RequestExchangeAuthIdForToken *)request handler:(void(^)(ResponseDeviceRequest *_Nullable response, NSError *_Nullable error))handler;


#pragma mark RegisterDevice(RequestRegisterDevice) returns (ResponseDeviceRequest)

/**
 * / register device to get auth token
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)registerDeviceWithRequest:(RequestRegisterDevice *)request handler:(void(^)(ResponseDeviceRequest *_Nullable response, NSError *_Nullable error))handler;

/**
 * / register device to get auth token
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToRegisterDeviceWithRequest:(RequestRegisterDevice *)request handler:(void(^)(ResponseDeviceRequest *_Nullable response, NSError *_Nullable error))handler;


#pragma mark RegisterDeprecatedDevice(RegisterDeprecatedDeviceRequest) returns (ResponseDeviceRequest)

/**
 * deprecated
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)registerDeprecatedDeviceWithRequest:(RegisterDeprecatedDeviceRequest *)request handler:(void(^)(ResponseDeviceRequest *_Nullable response, NSError *_Nullable error))handler;

/**
 * deprecated
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToRegisterDeprecatedDeviceWithRequest:(RegisterDeprecatedDeviceRequest *)request handler:(void(^)(ResponseDeviceRequest *_Nullable response, NSError *_Nullable error))handler;


@end


#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
/**
 * Basic service implementation, over gRPC, that only does
 * marshalling and parsing.
 */
@interface Registration : GRPCProtoService<Registration2, Registration>
- (instancetype)initWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions NS_DESIGNATED_INITIALIZER;
+ (instancetype)serviceWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions;
// The following methods belong to a set of old APIs that have been deprecated.
- (instancetype)initWithHost:(NSString *)host;
+ (instancetype)serviceWithHost:(NSString *)host;
@end
#endif

NS_ASSUME_NONNULL_END

