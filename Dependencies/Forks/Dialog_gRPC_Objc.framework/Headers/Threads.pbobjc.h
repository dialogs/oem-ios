// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: threads.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class GPBStringValue;
@class Group;
@class GroupOutPeer;
@class OutPeer;
@class ThreadReference;
@class UUIDValue;
@class UserOutPeer;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum RequestCreateThread_JoinPolicy

typedef GPB_ENUM(RequestCreateThread_JoinPolicy) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RequestCreateThread_JoinPolicy_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RequestCreateThread_JoinPolicy_InviteOnly = 0,
  RequestCreateThread_JoinPolicy_ThreadMembers = 1,
};

GPBEnumDescriptor *RequestCreateThread_JoinPolicy_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RequestCreateThread_JoinPolicy_IsValidValue(int32_t value);

#pragma mark - ThreadsRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface ThreadsRoot : GPBRootObject
@end

#pragma mark - ThreadReference

typedef GPB_ENUM(ThreadReference_FieldNumber) {
  ThreadReference_FieldNumber_MessageId = 1,
  ThreadReference_FieldNumber_Peer = 2,
};

GPB_FINAL @interface ThreadReference : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *messageId;
/** Test to see if @c messageId has been set. */
@property(nonatomic, readwrite) BOOL hasMessageId;

@property(nonatomic, readwrite, strong, null_resettable) OutPeer *peer;
/** Test to see if @c peer has been set. */
@property(nonatomic, readwrite) BOOL hasPeer;

@end

#pragma mark - RequestCreateThread

typedef GPB_ENUM(RequestCreateThread_FieldNumber) {
  RequestCreateThread_FieldNumber_RandomId = 1,
  RequestCreateThread_FieldNumber_ParentGroupPeer = 2,
  RequestCreateThread_FieldNumber_StartMessageId = 3,
  RequestCreateThread_FieldNumber_Title = 4,
  RequestCreateThread_FieldNumber_JoinPolicy = 5,
  RequestCreateThread_FieldNumber_MembersArray = 6,
};

/**
 * Create a threaded conversation inside a group
 **/
GPB_FINAL @interface RequestCreateThread : GPBMessage

/** random request id for query deduplication */
@property(nonatomic, readwrite) int64_t randomId;

/** parent group where thread is created */
@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *parentGroupPeer;
/** Test to see if @c parentGroupPeer has been set. */
@property(nonatomic, readwrite) BOOL hasParentGroupPeer;

/** message from where thread starts */
@property(nonatomic, readwrite, strong, null_resettable) UUIDValue *startMessageId;
/** Test to see if @c startMessageId has been set. */
@property(nonatomic, readwrite) BOOL hasStartMessageId;

/** thread title */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** thread join policy: for all group members or invite only */
@property(nonatomic, readwrite) RequestCreateThread_JoinPolicy joinPolicy;

/** / members */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserOutPeer*> *membersArray;
/** The number of items in @c membersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger membersArray_Count;

@end

/**
 * Fetches the raw value of a @c RequestCreateThread's @c joinPolicy property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RequestCreateThread_JoinPolicy_RawValue(RequestCreateThread *message);
/**
 * Sets the raw value of an @c RequestCreateThread's @c joinPolicy property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRequestCreateThread_JoinPolicy_RawValue(RequestCreateThread *message, int32_t value);

#pragma mark - ResponseCreateThread

typedef GPB_ENUM(ResponseCreateThread_FieldNumber) {
  ResponseCreateThread_FieldNumber_ThreadGroup = 1,
  ResponseCreateThread_FieldNumber_UserPeersArray = 3,
};

/**
 * Thread creation response
 **/
GPB_FINAL @interface ResponseCreateThread : GPBMessage

/** group, representing thread internally */
@property(nonatomic, readwrite, strong, null_resettable) Group *threadGroup;
/** Test to see if @c threadGroup has been set. */
@property(nonatomic, readwrite) BOOL hasThreadGroup;

/** corresponding user peers. empty if dropped by optimizations */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserOutPeer*> *userPeersArray;
/** The number of items in @c userPeersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger userPeersArray_Count;

@end

#pragma mark - RequestLiftThread

typedef GPB_ENUM(RequestLiftThread_FieldNumber) {
  RequestLiftThread_FieldNumber_RandomId = 1,
  RequestLiftThread_FieldNumber_ParentGroupPeer = 2,
  RequestLiftThread_FieldNumber_ThreadGroupPeer = 3,
  RequestLiftThread_FieldNumber_Title = 4,
};

/**
 * Converts thread into a group
 **/
GPB_FINAL @interface RequestLiftThread : GPBMessage

/** Id for query deduplication */
@property(nonatomic, readwrite) int64_t randomId;

/** parent group where thread is created */
@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *parentGroupPeer;
/** Test to see if @c parentGroupPeer has been set. */
@property(nonatomic, readwrite) BOOL hasParentGroupPeer;

/** group representing thread about to be lifted */
@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *threadGroupPeer;
/** Test to see if @c threadGroupPeer has been set. */
@property(nonatomic, readwrite) BOOL hasThreadGroupPeer;

/** lifted group title */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *title;
/** Test to see if @c title has been set. */
@property(nonatomic, readwrite) BOOL hasTitle;

@end

#pragma mark - ResponseLiftThread

typedef GPB_ENUM(ResponseLiftThread_FieldNumber) {
  ResponseLiftThread_FieldNumber_Group = 1,
};

/**
 * Thread lift response
 **/
GPB_FINAL @interface ResponseLiftThread : GPBMessage

/** group, representing lifted group */
@property(nonatomic, readwrite, strong, null_resettable) Group *group;
/** Test to see if @c group has been set. */
@property(nonatomic, readwrite) BOOL hasGroup;

@end

#pragma mark - RequestLoadGroupThreads

typedef GPB_ENUM(RequestLoadGroupThreads_FieldNumber) {
  RequestLoadGroupThreads_FieldNumber_Group = 1,
};

/**
 * Load group threads available for user
 **/
GPB_FINAL @interface RequestLoadGroupThreads : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *group;
/** Test to see if @c group has been set. */
@property(nonatomic, readwrite) BOOL hasGroup;

@end

#pragma mark - ResponseLoadGroupThreads

typedef GPB_ENUM(ResponseLoadGroupThreads_FieldNumber) {
  ResponseLoadGroupThreads_FieldNumber_ThreadsArray = 1,
};

GPB_FINAL @interface ResponseLoadGroupThreads : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ThreadReference*> *threadsArray;
/** The number of items in @c threadsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger threadsArray_Count;

@end

#pragma mark - RequestJoinThread

typedef GPB_ENUM(RequestJoinThread_FieldNumber) {
  RequestJoinThread_FieldNumber_ParentGroupPeer = 2,
  RequestJoinThread_FieldNumber_ThreadGroupPeer = 3,
};

/**
 * Join public thread
 **/
GPB_FINAL @interface RequestJoinThread : GPBMessage

/** parent group where thread is created */
@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *parentGroupPeer;
/** Test to see if @c parentGroupPeer has been set. */
@property(nonatomic, readwrite) BOOL hasParentGroupPeer;

/** group representing thread about to be joined */
@property(nonatomic, readwrite, strong, null_resettable) GroupOutPeer *threadGroupPeer;
/** Test to see if @c threadGroupPeer has been set. */
@property(nonatomic, readwrite) BOOL hasThreadGroupPeer;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
