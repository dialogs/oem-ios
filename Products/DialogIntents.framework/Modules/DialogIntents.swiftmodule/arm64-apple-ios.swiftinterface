// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name DialogIntents
import DialogIntentsExtension
import Foundation
import Intents
import Swift
public struct DialogSharedAccessConfig {
  public var appGroup: Swift.String
  public var keychainGroup: Swift.String
  public init(appGroup: Swift.String, keychainGroup: Swift.String)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers final public class DialogIntents : Intents.INExtension {
  public static var shared: DialogIntents.DialogIntents
  public static func configure(with config: DialogIntents.DialogSharedAccessConfig)
  @objc deinit
}
@available(iOS 13.0, *)
extension DialogIntents : Intents.INStartCallIntentHandling {
  @objc final public func handle(intent: Intents.INStartCallIntent, completion: @escaping (Intents.INStartCallIntentResponse) -> Swift.Void)
  @objc final public func resolveContacts(for intent: Intents.INStartCallIntent, with completion: @escaping ([Intents.INStartCallContactResolutionResult]) -> Swift.Void)
}
extension DialogIntents : Intents.INStartAudioCallIntentHandling {
  @objc final public func handle(intent: Intents.INStartAudioCallIntent, completion: @escaping (Intents.INStartAudioCallIntentResponse) -> Swift.Void)
  @objc final public func resolveContacts(for intent: Intents.INStartAudioCallIntent, with completion: @escaping ([Intents.INPersonResolutionResult]) -> Swift.Void)
}
extension DialogIntents : Intents.INStartVideoCallIntentHandling {
  @objc final public func handle(intent: Intents.INStartVideoCallIntent, completion: @escaping (Intents.INStartVideoCallIntentResponse) -> Swift.Void)
  @objc final public func resolveContacts(for intent: Intents.INStartVideoCallIntent, with completion: @escaping ([Intents.INPersonResolutionResult]) -> Swift.Void)
}
